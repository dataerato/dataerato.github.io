{"version":3,"sources":["constant/FactType.js","action/type.js","tool/getSuitableBreakdownList.js","view/FactEditor/helper.js","pages lazy /^/.*$/ groupOptions: {} namespace object","reducer/story.js","reducer/user.js","reducer/vis.js","reducer/index.js","store.js","components/LazyLoadingView/LazyLoading.js","components/LazyLoadingView/index.js","App.js","serviceWorker.js","index.js","constant/RelationType.js","constant/FieldType.js","constant/ChartType.js","tool/datafilter.js","tool/fact2visAllRule.js","tool/fact2visRule.js","tool/getSupportedChartTypes.js","sentencer/fact-templates/association.js","sentencer/fact-templates/categorization.js","sentencer/fact-templates/difference.js","sentencer/fact-templates/distribution.js","sentencer/fact-templates/extreme.js","sentencer/fact-templates/outlier.js","sentencer/fact-templates/proportion.js","sentencer/fact-templates/rank.js","sentencer/fact-templates/trend.js","sentencer/fact-templates/value.js","sentencer/fact-templates/index.js","sentencer/fact-templates-zh/association.js","sentencer/fact-templates-zh/categorization.js","sentencer/fact-templates-zh/difference.js","sentencer/fact-templates-zh/distribution.js","sentencer/fact-templates-zh/extreme.js","sentencer/fact-templates-zh/outlier.js","sentencer/fact-templates-zh/proportion.js","sentencer/fact-templates-zh/rank.js","sentencer/fact-templates-zh/trend.js","sentencer/fact-templates-zh/value.js","sentencer/fact-templates-zh/index.js","sentencer/relation-templates/similarity.js","sentencer/relation-templates/contrast.js","sentencer/relation-templates/temporal.js","sentencer/relation-templates/cause-effect.js","sentencer/relation-templates/elaboration.js","sentencer/relation-templates/generalization.js","sentencer/relation-templates/index.js","sentencer/index.js","constant/OperationType.js","tool/fact2vis.js","constant/AggregationType.js","constant/ConvertType.js","action/userAction.js","constant/LayoutType.js","Chart.js"],"names":["VALUE","TREND","CATEGORIZATION","DIFFERENCE","PROPORTION","DISTRIBUTION","RANK","ASSOCIATION","EXTREME","OUTLIER","UPLOAD_DATA","CONNECT_DATA","CHANGE_DATA","VISUALIZE_DATA","UPDATE_DATA_URL","ADD_FACT","INSERT_FACT","INSERT_RECOMMENDEDFACT","UPDATE_FACT","DELETE_FACT","DELETE_UNUSEDFACT","ORDER_FACTS","SET_HOVER_INDEX","UPDATE_FILTERS","UPDATE_FILTERS_TITLE","UPDATE_DATARES","UPDATE_SCHEMA_FILTER","UPDATE_FILTERS_CHANGE_FLAG","CHANGE_CURRENT_EDITING","UPDATE_FILTERS_LOCAL","UPDATE_PANNEL_WIDTH","INIT_FACT","INIT_RELATION","SELECT_FACT","CHANGE_METHOD","SET_STORY_PARAMETER","SET_AGGREGATION_LEVEL","SET_REWARD_WEIGHT","GENERATE_STORY","CHANGE_TITLE","CHANGE_SUBTITLE","UPDATE_STORY_CARD_NUMBER","UPDATE_COMMENT_STORY_INFO","UPDATE_UUID","UPDATE_PROGRESS","EXPORT_PDF","CHANGE_TO_ANIMATION","CHANGE_ALGORITHM","ADD_SFACT","ADD_EFACT","ADD_MFACT","DELETE_SFACT","DELETE_EFACT","DELETE_MFACT","OPTIMIZE_LAYOUT","INSERT_EMPTY_FACT","INSERT_INTERPOLATED_FACTS","CHANGE_INTERPOLATIONFLAG","UNDO","REDO","UPDATE_USER_INFO","UPDATE_USER_OPERATION","UPDATE_CONVERT_TYPE","UPDATE_LOCALE","UPDATE_COLLAPSED","UPDATE_LEFT_COLLAPSED","UPDATE_HEADERBAR_TOGGLE","OPEN_LEFT_FOLAT_MENUE","UPDATE_CLICKED_MENUE","CHANGE_LAYOUT_TYPE","CHANGE_USEREND","WINDOW_UP_SCROLL","UPDATA_USER_END_SIZE","IS_HIDDEN_INDEX_LEFT_MENUE","IS_HIDDEN_COMMENT_STORY","UPDATE_LAST_PAGE","UPDATE_SID","SHARE_STORY","IS_GENERATE_STORY","TO_NEW_PAGE","IS_CLICKED_LOGOUT","LEAVE_CREATE_PAGE","IS_INTERRUPT_PROCESS","CHANGE_FACTSHEET_LAYOUT_TYPE","UPDATE_VIS_CONTAINER_SIZE","getSuitableBreakdownList","factType","chartType","schema","suitableBreakdownList","fact2visAllRules","filter","x","fact","chart","length","breakdownSets","Set","forEach","breakdownType","type","add","breakdownList","Array","from","s","indexOf","isValid","FactType","measure","groupby","focus","customizeFact","data","newFact","Object","assign","groupbyList","field","measureList","key","push","gbValueList","getFieldValue","value","encoding","aggregate","filteredData","datafilter","subspace","aggregatedRows","getAggregatedRows","measureField","max","reduce","a","b","extremeFocus","extremeValue","newOrder","sort","y","map","d","newOrderValue","n","posQ3","parseInt","posQ1","decimalQ3","decimalQ1","Q3","Q1","Low","Up","outlierIndex","i","groupbyFieldList","getMaxRows","rawData","d3","entries","index","values","aggregation","calculateData","sumData","fill","sumRows","getSumRows","getAverageRows","getMinRows","countData","countRows","getCountRows","fieldName","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","module","exports","uuid","localStorage","getItem","JSON","parse","sessionStorage","plur","require","convertField","param","gb","gbWords","split","gbWordIndex","plurWord","replace","initialState","fileName","real_filename","title","subtitle","method","facts","unusedFacts","relations","hoverFactIndex","selectedFactIndex","maxStoryLength","timeLimit","information","resultCoverage","chartDiversity","aggregationLevel","rewardWeight","logicality","diversity","integrity","generateProgress","visData","historyStory","isExportPdf","generateUrl","filters","filtersTitle","datares","schemaFilter","filtersChangeFlag","editstate","editingCurrentFact","filtersLocal","filtersTitleLocal","dataresLocal","schemaFilterLocal","leftPaneWidth","rightPaneWidth","filtersOrigin","filtersTitleOrigin","animationFlag","animationType","algorithm","calSimilarityType","maximumFact","recommendedSfacts","recommendedEfacts","recommendedMfacts","layoutFlag","interpolationFlag","specIndex","timeline","userInfo","Cookies","get","username","uid","isLogin","operateState","OperationType","BEFORE_UPLOAD","convertType","ConvertType","FACTSHEET","currentLocale","clickedMenue","isCollapsed","isLeftCollapsed","updateHeaderbarToggle","isOpenLeftFloatMenue","layoutType","LayoutType","TABLE","isMobilephoneEnd","windowUpScroller","userEndSize","userEnd","cardNumber","isHiddenCommentAStory","lastPage","OperateRelatedId","isShareStory","isShowGenerate","newPage","isToLogout","isLeaveCreatePage","isInterruptProcess","factsheetLayoutType","containerSize","combineReducers","story","newFacts","newFactsCopy","specIndex1","state","action","newState","ActionType","storyRelations","storyFacts","concat","_","cloneDeep","splice","newUnusedFacts","insert","item","newFact1","factLocation","sourceIndex","moved","destinationIndex","facts2charts","level","newWeight","coverage","Number","totalLength","currentLength","toFixed","emptyFact","interpolatedFacts","unshift","prototype","apply","genTitle","Math","min","subStorytitle","filtersTitleCore","storyParameter","historyfacts","historyTitle","historySubtitle","historStoryParameter","historyAggregationLevel","historyResultCoverage","setItem","stringify","schemaNoTextID","dataclone","datares1","itemfield","item1","parseFloat","schemaFilter1","filtersField","filtersIndex","mean","median","std","var","dateres","user","isChangeToggle","isWindowUpScroll","isHidden","isLogOut","isLeaving","vis","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","configureStore","LazyLoading","this","props","isLoading","error","Component","Loading","url","Loadable","loader","loading","locales","App","initDone","initDefaultLang","lang","navigator","language","userLanguage","substr","loadLocales","intl","init","updateLocale","setState","MyRoute","MyComponent","rest","render","routerProps","onChangeLocaleListener","exact","path","React","connect","dispatch","userAction","Boolean","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","catch","console","message","SIMILARITY","ELABORATION","GENERALIZATION","CONTRAST","TEMPORAL","CAUSE","OTHERS","NUMERICAL","CATEGORICAL","GEOGRAPHICAL","Text","JUXTAPOSITION","AREA_CHART","VERTICAL_BAR_CHART","VERTICAL_DIFFERENCE_BAR_CHART","VERTICAL_DIFFERENCE_ARROW_CHART","HORIZONTAL_BAR_CHART","PROGRESS_BAR_CHART","STACKED_BAR_CHART","ISOTYPE_BAR_CHART","PROPORTION_ISOTYPE_CHART","COLOR_FILLING_MAP","BUBBLE_CHART","TEXT_CHART","LINE_CHART","STACKED_LINE_CHART","RING_CHART","HALF_RING_CHART","PIE_CHART","SCATTER_PLOT","TREE_MAP","BUBBLE_MAP","sub","ChartType","FieldType","fact2visRules","getSupportedChartTypes","supportedChartTypes","isEdit","breakDown","rules","rang","templates","pickFactTemplate","association","categorization","difference","distribution","extreme","outlier","proportion","rank","trend","floor","random","sentence","template","log","pickRelationTemplate","RelationType","similarity","contrast","cause","temporal","elaboration","generalization","convertAggregation","aggType","AggregationType","SUM","MAX","MIN","AVG","MEDIAN","COUNT","NONE","convertAggregationZH","convertMeasure","toLowerCase","convertGroupby","formatNum","num","number","floatNum","intNum","toString","substring","result","counter","join","genFactSubspace","toUpperCase","genFactSubspaceZh","genFactSentence","_fact","parameter","parameterList","focusValue","undefined","round","pickFactTemplateZh","genStoryText","storyText","pairLength","generatedScript","genSubtitle","UPLOADIND","UPLOADED","GENERATING","GENERATED","FAILED","FILE_LARGE","ADDING","ADD_FAILED","ADDED","PUBLISHED","shema","choiceCount","choicedChartTypes","getChoice","getFactChartType","getvischartype","fact2chart","specData","size","specFact","breakdown","specChart","style","duration","showSuggestion","specNew","spec","updateUserInfo","updateOperation","updateCovertType","changeLayOutType","changeUserEnd","updateUserEnd","shareStory","loadingGeneratingView","changeFactsheetLayoutType","STORYLINE_WEB","SLIDER_MOBILE","STORY_TEXT","Chart","container","autovis","AutoVis","load","generate","height","width","margin"],"mappings":"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IAED,iCAAkC,CACjC,GACA,EACA,EACA,EACA,IAED,oCAAqC,CACpC,GACA,EACA,EACA,EACA,IAED,4BAA6B,CAC5B,GACA,EACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,EACA,EACA,EACA,IAED,qCAAsC,CACrC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,kCAAmC,CAClC,GACA,EACA,EACA,EACA,IAED,qCAAsC,CACrC,GACA,EACA,EACA,EACA,IAED,4BAA6B,CAC5B,GACA,EACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,EACA,EACA,EACA,IAED,qCAAsC,CACrC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,kCAAmC,CAClC,GACA,EACA,EACA,EACA,IAED,qCAAsC,CACrC,GACA,EACA,EACA,EACA,IAED,2BAA4B,CAC3B,GACA,EACA,EACA,EACA,EACA,EACA,IAED,4BAA6B,CAC5B,GACA,EACA,EACA,EACA,EACA,EACA,IAED,oCAAqC,CACpC,IACA,EACA,EACA,EACA,EACA,EACA,GAED,uCAAwC,CACvC,IACA,EACA,EACA,EACA,EACA,EACA,GAED,yCAA0C,CACzC,IACA,EACA,IAED,iCAAkC,CACjC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,oCAAqC,CACpC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,8BAA+B,CAC9B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,+BAAgC,CAC/B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,uCAAwC,CACvC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,oCAAqC,CACpC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,uCAAwC,CACvC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,uBAAwB,CACvB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,+BAAgC,CAC/B,IACA,EACA,GACA,IAED,kCAAmC,CAClC,IACA,EACA,GACA,IAED,+BAAgC,CAC/B,IACA,EACA,EACA,EACA,EACA,EACA,IAED,kCAAmC,CAClC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,4BAA6B,CAC5B,GACA,EACA,EACA,EACA,EACA,EACA,IAED,+BAAgC,CAC/B,GACA,EACA,EACA,EACA,EACA,EACA,IAED,iCAAkC,CACjC,IACA,EACA,IAED,0BAA2B,CAC1B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,2BAA4B,CAC3B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,mCAAoC,CACnC,IACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,IAED,mCAAoC,CACnC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,mCAAoC,CACnC,IACA,EACA,EACA,EACA,EACA,EACA,GAED,sCAAuC,CACtC,IACA,EACA,EACA,EACA,EACA,EACA,GAED,0CAA2C,CAC1C,IACA,EACA,EACA,EACA,EACA,GACA,IAED,6CAA8C,CAC7C,IACA,EACA,EACA,EACA,EACA,GACA,IAED,gCAAiC,CAChC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,mCAAoC,CACnC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,qCAAsC,CACrC,IACA,EACA,IAED,qCAAsC,CACrC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,6BAA8B,CAC7B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,8BAA+B,CAC9B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,+CAAgD,CAC/C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,kDAAmD,CAClD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,kDAAmD,CAClD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,kDAAmD,CAClD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,gDAAiD,CAChD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,iDAAkD,CACjD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,oDAAqD,CACpD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,EACA,EACA,EACA,GACA,IAED,gDAAiD,CAChD,IACA,EACA,EACA,EACA,EACA,GACA,IAED,4CAA6C,CAC5C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,kDAAmD,CAClD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,EACA,EACA,EACA,EACA,IAED,mCAAoC,CACnC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,sCAAuC,CACtC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,wCAAyC,CACxC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,gCAAiC,CAChC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,iCAAkC,CACjC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,mDAAoD,CACnD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,sDAAuD,CACtD,IACA,EACA,EACA,EACA,EACA,EACA,IAED,wDAAyD,CACxD,IACA,EACA,IAED,sCAAuC,CACtC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,yCAA0C,CACzC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,qCAAsC,CACrC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,EACA,EACA,EACA,EACA,IAED,YAAa,CACZ,GACA,EACA,EACA,EACA,EACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,EACA,EACA,EACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,EACA,EACA,EACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,aAAc,CACb,GACA,EACA,EACA,EACA,EACA,EACA,IAED,cAAe,CACd,GACA,EACA,EACA,EACA,EACA,EACA,IAED,iCAAkC,CACjC,IACA,EACA,EACA,EACA,GACA,IAED,oCAAqC,CACpC,IACA,EACA,EACA,EACA,GACA,IAED,sCAAuC,CACtC,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,EACA,EACA,EACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,EACA,EACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,wBAAyB,CACxB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,mCAAoC,CACnC,IACA,EACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,EACA,EAC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","file":"static/js/main.abca0d88.chunk.js","sourcesContent":["export default {\n    VALUE: 'value',\n    TREND: 'trend',\n    CATEGORIZATION: 'categorization',\n    DIFFERENCE: 'difference',\n    PROPORTION: 'proportion',\n    DISTRIBUTION: 'distribution',\n    RANK: 'rank',\n    ASSOCIATION: 'association',\n    EXTREME: 'extreme',\n    OUTLIER: 'outlier'\n}","export default {\n    // Data\n    UPLOAD_DATA: 'UPLOAD_DATA',\n    CONNECT_DATA: 'CONNECT_DATA',\n    CHANGE_DATA: 'CHANGE_DATA',\n    VISUALIZE_DATA: 'VISUALIZE_DATA',\n    UPDATE_DATA_URL: 'UPDATE_DATA_URL',\n    // Fact\n    ADD_FACT: 'ADD_FACT',\n    INSERT_FACT: 'INSERT_FACT',\n    INSERT_RECOMMENDEDFACT: 'INSERT_RECOMMENDEDFACT',\n    UPDATE_FACT: 'UPDATE_FACT',\n    DELETE_FACT: 'DELETE_FACT',\n    DELETE_UNUSEDFACT: 'DELETE_UNUSEDFACT',\n    ORDER_FACTS: 'ORDER_FACTS',\n    SET_HOVER_INDEX: 'SET_HOVER_INDEX',\n    UPDATE_FILTERS:'UPDATE_FILTERS',\n    UPDATE_FILTERS_TITLE:'UPDATE_FILTERS_TITLE',\n    UPDATE_DATARES:'UPDATE_DATARES',\n    UPDATE_SCHEMA_FILTER:'UPDATE_SCHEMA_FILTER',\n    UPDATE_FILTERS_CHANGE_FLAG:'UPDATE_FILTERS_CHANGE_FLAG',\n    CHANGE_CURRENT_EDITING:'CHANGE_CURRENT_EDITING',\n    UPDATE_FILTERS_LOCAL: 'UPDATE_FILTERS_LOCAL', \n    UPDATE_PANNEL_WIDTH:'UPDATE_PANNEL_WIDTH',\n\n    // Story\n    INIT_FACT: 'INIT_FACT',\n    INIT_RELATION: 'INIT_RELATION',\n    SELECT_FACT: 'SELECT_FACT',\n    CHANGE_METHOD: 'CHANGE_METHOD',\n    SET_STORY_PARAMETER: 'SET_STORY_PARAMETER',\n    SET_AGGREGATION_LEVEL: 'SET_AGGREGATION_LEVEL',\n    SET_REWARD_WEIGHT: 'SET_REWARD_WEIGHT',\n    GENERATE_STORY: 'GENERATE_STORY',\n    CHANGE_TITLE: 'CHANGE_TITLE',\n    CHANGE_SUBTITLE: 'CHANGE_SUBTITLE',\n    UPDATE_STORY_CARD_NUMBER: 'UPDATE_STORY_CARD_NUMBER',\n    UPDATE_COMMENT_STORY_INFO: 'UPDATE_COMMENT_STORY_INFO',\n    UPDATE_UUID: 'UPDATE_UUID',\n    UPDATE_PROGRESS: 'UPDATE_PROGRESS',//生成进度\n    EXPORT_PDF: 'EXPORT_PDF',//导出pdf\n    // new\n    CHANGE_TO_ANIMATION: 'CHANGE_TO_ANIMATION',//change facts to animated facts\n    //algorithm\n    CHANGE_ALGORITHM:'CHANGE_ALGORITHM',\n    ADD_SFACT:'ADD_SFACT',\n    ADD_EFACT:'ADD_EFACT',\n    ADD_MFACT:'ADD_MFACT',\n    DELETE_SFACT:'DELETE_SFACT',\n    DELETE_EFACT:'DELETE_EFACT',\n    DELETE_MFACT:'DELETE_MFACT',\n    OPTIMIZE_LAYOUT:'OPTIMIZE_LAYOUT',\n    INSERT_EMPTY_FACT:'INSERT_EMPTY_FACT',\n    INSERT_INTERPOLATED_FACTS:'INSERT_INTERPOLATED_FACT',\n    CHANGE_INTERPOLATIONFLAG:'CHANGE_INTERPOLATIONFLAG',\n    UNDO:'UNDO',\n    REDO:'REDO',\n    //user\n    UPDATE_USER_INFO: 'UPDATE_USER_INFO',\n    UPDATE_USER_OPERATION: 'UPDATE_USER_OPERATION',\n    UPDATE_CONVERT_TYPE: 'UPDATE_CONVERT_TYPE',\n    UPDATE_LOCALE: 'UPDATE_LOCALE',\n    UPDATE_COLLAPSED: 'UPDATE_COLLAPSED',\n    UPDATE_LEFT_COLLAPSED: 'UPDATE_LEFT_COLLAPSED',\n    UPDATE_HEADERBAR_TOGGLE: 'UPDATE_HEADERBAR_TOGGLE',\n    OPEN_LEFT_FOLAT_MENUE: 'OPEN_LEFT_FOLAT_MENUE',\n    UPDATE_CLICKED_MENUE: 'UPDATE_CLICKED_MENUE',\n    CHANGE_LAYOUT_TYPE: \"CHANGE_LAYOUT_TYPE\",\n    CHANGE_USEREND: 'CHANGE_USEREND',\n    WINDOW_UP_SCROLL: 'WINDOW_UP_SCROLL',\n    UPDATA_USER_END_SIZE: 'UPDATA_USER_END_SIZE',\n    IS_HIDDEN_INDEX_LEFT_MENUE: 'IS_HIDDEN_INDEX_LEFT_MENUE',\n    IS_HIDDEN_COMMENT_STORY: 'IS_HIDDEN_COMMENT_STORY',\n    UPDATE_LAST_PAGE: 'UPDATE_LAST_PAGE',\n    UPDATE_SID: 'UPDATE_SID',\n    SHARE_STORY: 'SHARE_STORY',\n    IS_GENERATE_STORY: 'IS_GENERATE_STORY',\n    TO_NEW_PAGE: 'TO_NEW_PAGE',\n    IS_CLICKED_LOGOUT: 'IS_CLICKED_LOGOUT',\n    LEAVE_CREATE_PAGE: 'LEAVE_CREATE_PAGE',\n    IS_INTERRUPT_PROCESS: 'IS_INTERRUPT_PROCESS',\n    CHANGE_FACTSHEET_LAYOUT_TYPE:'CHANGE_FACTSHEET_LAYOUT_TYPE',\n    //Vis\n    UPDATE_VIS_CONTAINER_SIZE: 'UPDATE_VIS_CONTAINER_SIZE'\n}","import { fact2visAllRules } from '@/tool/fact2visAllRule';\n\nconst getSuitableBreakdownList = (factType, chartType, schema) => {\n    //acording to factType ---> filter\n    let suitableBreakdownList = fact2visAllRules.filter(x => x.fact === factType);\n\n    //if has choosed chartType ---> filter\n    if (chartType) {\n        suitableBreakdownList = suitableBreakdownList.filter(x => x.chart === chartType);\n    }\n    if (suitableBreakdownList.length === 0) return [];\n    let breakdownSets = new Set();\n    suitableBreakdownList.forEach(x => {\n        x.breakdownType.forEach(type => {\n            breakdownSets.add(type)\n        })\n    })\n    let breakdownList = Array.from(breakdownSets);\n    //console.log(\"suitableBreakdownList\", breakdownList)\n    let suitableSchema = schema.filter(s => {\n        return breakdownList.indexOf(s.type) !== -1\n    })\n    // suitableSchema = suitableSchema.map(shema => {\n    //     return shema.field\n    // })\n    //console.log(\"suitableSchema\", suitableSchema)\n    return suitableSchema;\n};\nexport default getSuitableBreakdownList;","import FactType from '../../constant/FactType'\nimport getSuitableBreakdownList from '@/tool/getSuitableBreakdownList';\nimport datafilter from '@/tool/datafilter';\nimport * as d3 from 'd3';\n// import _ from 'lodash';\n\n// chart valid\nexport const isValid = function (fact) {\n    let isValid = false;\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            if (fact.measure.length === 2 && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.CATEGORIZATION:\n            if (fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.DIFFERENCE:\n            if (fact.measure.length   && fact.groupby.length && fact.focus.length >= 2)\n                isValid = true\n            break;\n\n        case FactType.DISTRIBUTION:\n            if (fact.measure.length   && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.EXTREME:\n            if (fact.measure.length   && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.OUTLIER:\n            if (fact.measure.length   && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.PROPORTION:\n            if (fact.measure.length   && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.RANK:\n            if (fact.measure.length   && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.TREND:\n            if (fact.measure.length   && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.VALUE:\n            if (fact.measure.length)\n                isValid = true\n            break;\n\n        default:\n            break;\n    }\n    return isValid\n}\n\n/***\n * 清空不必要的fact属性\n ***/\nexport const customizeFact = function (fact, schema, data) {\n    let newFact = Object.assign({}, fact)\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            newFact.focus = [];\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                const measureList = schema.filter(key => key['type'] === \"numerical\");\n                if (newFact.measure.length === 0 && measureList.length > 0){\n                    newFact.measure = [{\"field\": measureList[0].field, \"aggregate\": \"count\"}];\n                }\n                if (newFact.measure.length === 1){\n                    newFact.measure.push({\"field\": 'COUNT', \"aggregate\": \"count\"});\n                }\n            }\n            break;\n\n        case FactType.CATEGORIZATION:\n            newFact.measure = []\n            newFact.focus = []\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n            }\n            break;\n\n        case FactType.DIFFERENCE:\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema),\n                    gbValueList = getFieldValue(data, fact.groupby);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n                /***** 设默认为第1、2条，并且更新到fact中 *****/\n                if (!newFact.focus.length) {\n                    newFact.focus = [{\n                            field: newFact.groupby[0],\n                            value: gbValueList[0],\n                        },\n                        {\n                            field: newFact.groupby[0],\n                            value: gbValueList[1],\n                        }\n                    ]\n                }    \n            }\n            break;\n\n        case FactType.DISTRIBUTION:\n            newFact.focus = []\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n            }\n            break;\n\n        case FactType.EXTREME:\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                } \n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n                // aggregation\n                if (newFact.measure.length && newFact.groupby.length) {\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let measureField = newFact.measure[0]['field'];\n                    let max = aggregatedRows.reduce((a, b) => (a[measureField] > b[measureField]) ? a : b);\n\n                    /***** 设默认为max，并且更新到fact中 *****/\n                    if (!newFact.focus.length) {\n                        newFact.focus = [{\n                            field: newFact.groupby[0],\n                            value: max[newFact.groupby[0]],\n                            extremeFocus: 'max',\n                            extremeValue: max[newFact.measure[0].field]\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.OUTLIER:\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n                // aggregation\n                if (newFact.measure.length && newFact.groupby.length) {\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let newOrder = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.x.field]; })\n                    let newOrderValue = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.y.field]; })\n\n                    let n = newOrderValue.length\n                    // 整数部分\n                    let posQ3 = parseInt((n - 1) * 0.25)\n                    let posQ1 = parseInt((n - 1) * 0.75)\n                    // 小数部分\n                    let decimalQ3 = (n - 1) * 0.25 - posQ3\n                    let decimalQ1 = (n - 1) * 0.75 - posQ1\n                    let Q3 = newOrderValue[posQ3] + (newOrderValue[posQ3 + 1] - newOrderValue[posQ3]) * decimalQ3\n                    let Q1 = newOrderValue[posQ1] + (newOrderValue[posQ1 + 1] - newOrderValue[posQ1]) * decimalQ1\n\n                    let Low = Q1 - 1.5 * (Q3 - Q1)\n                    let Up = Q3 + 1.5 * (Q3 - Q1)\n                    let outlierIndex = []\n                    newOrderValue.forEach((d, i) => {\n                        if (d > Up || d < Low) {\n                            outlierIndex.push(i)\n                        }\n                    });\n\n                    /***** 设默认为outlier，并且更新到fact中 *****/\n                    if (!newFact.focus.length && outlierIndex.length) {\n                        newFact.focus = [{\n                            field: fact.groupby[0],\n                            value: newOrder[outlierIndex[0]],\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.PROPORTION:\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n\n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n                if (newFact.measure.length && newFact.groupby.length) {\n                    // aggregation\n                    let encoding = {}\n                        encoding['y'] = {};\n                        encoding['y']['field'] = newFact.measure[0].field;\n                        encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                        encoding['x'] = {};\n                        encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let measureField = newFact.measure[0]['field'];\n                    let max = aggregatedRows.reduce((a, b) => (a[measureField] > b[measureField]) ? a : b)\n\n                    /***** 设默认为max，并且更新到fact中 *****/\n                    if (!newFact.focus.length) {\n                        newFact.focus = [{\n                            field: newFact.groupby[0],\n                            value: max[newFact.groupby[0]],\n                        }]\n                    }\n                } \n            }\n            break;\n\n        case FactType.RANK:\n            newFact.focus = []\n            if(schema && data){\n                const groupbyList = getSuitableBreakdownList(newFact.type, newFact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n                // if (newFact.measure.length && newFact.groupby.length) {\n                //     // aggregation\n                //     let encoding = {}\n                //     encoding['y'] = {};\n                //     encoding['y']['field'] = newFact.measure[0].field;\n                //     encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                //     encoding['x'] = {};\n                //     encoding['x']['field'] = newFact.groupby[0];\n                //     let filteredData = datafilter(data, newFact.subspace)\n                //     let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                //     // filter gbValueList\n                //     let newOrder = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.x.field]; })\n        \n                //     /***** 设默认为前3，并且更新到fact中 *****/\n\n                //     let focus = []\n                //     newOrder.forEach((d, i) => {\n                //         if (i < 3) {\n                //             focus.push({ field: fact.groupby[0], value: d })\n                //         }\n                //     });\n                //     if(!_.isEqual(focus, newFact.focus)){\n                //         newFact.focus = focus;\n                //     }\n                // }\n            }\n            break;\n\n        case FactType.TREND:\n            newFact.focus = [];\n            if(schema && data){\n                let groupbyList = schema.filter(key => key['type'] === \"temporal\")\n                const groupbyFieldList = groupbyList.map((d) => d.field);\n                if(groupbyList.length === 0){\n                    newFact.groupby = []\n                }else if(newFact.groupby.length === 0 || groupbyFieldList.indexOf(newFact.groupby[0]) === -1){\n                    newFact.groupby = [groupbyList[0].field];\n                }\n\n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n            }\n            break;\n\n        case FactType.VALUE:\n            newFact.groupby = []\n            newFact.focus = []\n            if(schema && data){\n                if (newFact.measure.length === 0){\n                    newFact.measure = [{\"field\": 'COUNT', \"aggregate\": \"count\"}];\n                }\n            }\n            break;\n\n        default:\n            break;\n    }\n\n    return newFact\n}\n\n// fact valid for score to update(RANK/PROPORTION/OUTLIER/DIFFERENCE)\n//NO USE FOR A MOMENT!!!!!\nexport const isFactValid = function (_fact) {\n    let fact = Object.assign({}, _fact)\n    let isFactValid = false;\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            if (fact.measure.length === 2 && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.CATEGORIZATION:\n            if (fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.DIFFERENCE:\n            if (fact.measure && fact.groupby && fact.focus.length >= 2)\n                isFactValid = true\n            break;\n\n        case FactType.DISTRIBUTION:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.EXTREME:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.OUTLIER:\n            if (fact.measure && fact.groupby && fact.focus.length)\n                isFactValid = true\n            break;\n\n        case FactType.PROPORTION:\n            if (fact.measure && fact.groupby && fact.focus.length)\n                isFactValid = true\n            break;\n\n        case FactType.RANK:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length >= 3)\n                isFactValid = true\n            break;\n\n        case FactType.TREND:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.VALUE:\n            if (fact.measure)\n                isFactValid = true\n            break;\n\n        default:\n            break;\n    }\n    return isFactValid\n}\n\nconst getCountRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let countData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(() => {\n            countData[i] += 1\n        })\n        let countRows = Object.assign({}, d.values[0])\n        countRows['COUNT'] = countData[i]\n        return countRows\n    });\n    return data;\n}\n\nconst getMinRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let data = calculateData.map(function (d) {\n        let index = d3.scan(d.values, function (a, b) {\n            if (a[encoding.y.field] && b[encoding.y.field])\n                return a[encoding.y.field] - b[encoding.y.field];\n        });\n        if (index >= 0) {\n            return d.values[index]\n        } else {\n            return d.values[0]\n        }\n    });\n    return data;\n}\n\nconst getMaxRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let data = calculateData.map(function (d, i) {\n        let index = d3.scan(d.values, function (a, b) {\n            if (a[encoding.y.field] && b[encoding.y.field])\n                return b[encoding.y.field] - a[encoding.y.field];\n        });\n        if (index >= 0) {\n            return d.values[index]\n        } else {\n            return d.values[0];\n        }\n    });\n    return data;\n}\n\nconst getSumRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let sumData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(d => {\n            sumData[i] += d[encoding.y.field]\n        })\n        let sumRows = Object.assign({}, d.values[0])\n        sumRows[encoding.y.field] = sumData[i]\n        return sumRows\n    });\n    return data;\n}\n\nconst getAverageRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let sumData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(d => {\n            sumData[i] += d[encoding.y.field]\n        })\n        let sumRows = Object.assign({}, d.values[0])\n        sumRows[encoding.y.field] = sumData[i] / d.values.length;\n        return sumRows;\n    });\n    return data;\n}\n\nconst getAggregatedRows = (rawData, encoding) => {\n    let data;\n    switch (encoding.y.aggregation) {\n        case 'sum':\n            data = getSumRows(rawData, encoding);\n            break;\n        case 'avg':\n            data = getAverageRows(rawData, encoding);\n            break;\n        case 'max':\n            data = getMaxRows(rawData, encoding);\n            break;\n        case 'min':\n            data = getMinRows(rawData, encoding);\n            break;\n        case 'count':\n            data = getCountRows(rawData, encoding)\n            break;\n\n        default:\n            data = getMaxRows(rawData, encoding);\n            break;\n    }\n    return data;\n}\n\nconst getFieldValue = (rawData, fieldName) => {\n    if (fieldName)\n        return Array.from(new Set(rawData.map(d => d[fieldName])));\n    else return []\n}","var map = {\n\t\"./EditPage/EditDashboard\": [\n\t\t54,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t16\n\t],\n\t\"./EditPage/EditDashboard/\": [\n\t\t54,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t16\n\t],\n\t\"./EditPage/EditDashboard/EditPage\": [\n\t\t134,\n\t\t9,\n\t\t41\n\t],\n\t\"./EditPage/EditDashboard/EditPage.js\": [\n\t\t134,\n\t\t9,\n\t\t41\n\t],\n\t\"./EditPage/EditDashboard/EditPage.less\": [\n\t\t267,\n\t\t7,\n\t\t55\n\t],\n\t\"./EditPage/EditDashboard/index\": [\n\t\t54,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t16\n\t],\n\t\"./EditPage/EditDashboard/index.js\": [\n\t\t54,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t16\n\t],\n\t\"./EditPage/EditDataComics\": [\n\t\t55,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t17\n\t],\n\t\"./EditPage/EditDataComics/\": [\n\t\t55,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t17\n\t],\n\t\"./EditPage/EditDataComics/EditPage\": [\n\t\t135,\n\t\t9,\n\t\t42\n\t],\n\t\"./EditPage/EditDataComics/EditPage.js\": [\n\t\t135,\n\t\t9,\n\t\t42\n\t],\n\t\"./EditPage/EditDataComics/EditPage.less\": [\n\t\t268,\n\t\t7,\n\t\t56\n\t],\n\t\"./EditPage/EditDataComics/index\": [\n\t\t55,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t17\n\t],\n\t\"./EditPage/EditDataComics/index.js\": [\n\t\t55,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t17\n\t],\n\t\"./EditPage/EditDataVideos\": [\n\t\t56,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t18\n\t],\n\t\"./EditPage/EditDataVideos/\": [\n\t\t56,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t18\n\t],\n\t\"./EditPage/EditDataVideos/EditPage\": [\n\t\t136,\n\t\t9,\n\t\t43\n\t],\n\t\"./EditPage/EditDataVideos/EditPage.js\": [\n\t\t136,\n\t\t9,\n\t\t43\n\t],\n\t\"./EditPage/EditDataVideos/EditPage.less\": [\n\t\t269,\n\t\t7,\n\t\t57\n\t],\n\t\"./EditPage/EditDataVideos/index\": [\n\t\t56,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t18\n\t],\n\t\"./EditPage/EditDataVideos/index.js\": [\n\t\t56,\n\t\t9,\n\t\t4,\n\t\t6,\n\t\t18\n\t],\n\t\"./EditPage/EditFactsheet\": [\n\t\t57,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./EditPage/EditFactsheet/\": [\n\t\t57,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./EditPage/EditFactsheet/EditPage\": [\n\t\t113,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/EditFactsheet/EditPage.js\": [\n\t\t113,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/EditFactsheet/EditPage.less\": [\n\t\t263,\n\t\t7,\n\t\t59\n\t],\n\t\"./EditPage/EditFactsheet/index\": [\n\t\t57,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./EditPage/EditFactsheet/index.js\": [\n\t\t57,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./EditPage/EditFactsheetNew\": [\n\t\t58,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/EditFactsheetNew/\": [\n\t\t58,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/EditFactsheetNew/EditPage\": [\n\t\t139,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t19\n\t],\n\t\"./EditPage/EditFactsheetNew/EditPage.js\": [\n\t\t139,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t19\n\t],\n\t\"./EditPage/EditFactsheetNew/EditPage.less\": [\n\t\t270,\n\t\t7,\n\t\t58\n\t],\n\t\"./EditPage/EditFactsheetNew/index\": [\n\t\t58,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/EditFactsheetNew/index.js\": [\n\t\t58,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/EditView\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t13\n\t],\n\t\"./EditPage/EditView/\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t13\n\t],\n\t\"./EditPage/EditView/DropView\": [\n\t\t114,\n\t\t9,\n\t\t38,\n\t\t45\n\t],\n\t\"./EditPage/EditView/DropView.js\": [\n\t\t114,\n\t\t9,\n\t\t38,\n\t\t45\n\t],\n\t\"./EditPage/EditView/EditView\": [\n\t\t117,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t26\n\t],\n\t\"./EditPage/EditView/EditView.js\": [\n\t\t117,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t26\n\t],\n\t\"./EditPage/EditView/index\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t13\n\t],\n\t\"./EditPage/EditView/index.js\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t13\n\t],\n\t\"./EditPage/EditView/index.less\": [\n\t\t261,\n\t\t7,\n\t\t60\n\t],\n\t\"./EditPage/FactListView\": [\n\t\t50,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/FactListView/\": [\n\t\t50,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/FactListView/BarBrush\": [\n\t\t109,\n\t\t9,\n\t\t49\n\t],\n\t\"./EditPage/FactListView/BarBrush.js\": [\n\t\t109,\n\t\t9,\n\t\t49\n\t],\n\t\"./EditPage/FactListView/FactCard\": [\n\t\t119,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5,\n\t\t36\n\t],\n\t\"./EditPage/FactListView/FactCard.js\": [\n\t\t119,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5,\n\t\t36\n\t],\n\t\"./EditPage/FactListView/FactList\": [\n\t\t122,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/FactListView/FactList.js\": [\n\t\t122,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/FactListView/NumericalFilter\": [\n\t\t121,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t40,\n\t\t50\n\t],\n\t\"./EditPage/FactListView/NumericalFilter.js\": [\n\t\t121,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t40,\n\t\t50\n\t],\n\t\"./EditPage/FactListView/index\": [\n\t\t50,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/FactListView/index.js\": [\n\t\t50,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/FactListView/index.less\": [\n\t\t262,\n\t\t7,\n\t\t62\n\t],\n\t\"./EditPage/FactListView/schemaTest\": [\n\t\t120,\n\t\t9,\n\t\t51\n\t],\n\t\"./EditPage/FactListView/schemaTest.js\": [\n\t\t120,\n\t\t9,\n\t\t51\n\t],\n\t\"./EditPage/FactListViewNew\": [\n\t\t51,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./EditPage/FactListViewNew/\": [\n\t\t51,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./EditPage/FactListViewNew/AlgorithmSettings\": [\n\t\t123,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t32\n\t],\n\t\"./EditPage/FactListViewNew/AlgorithmSettings.js\": [\n\t\t123,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t32\n\t],\n\t\"./EditPage/FactListViewNew/AnimationSettings\": [\n\t\t128,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t29\n\t],\n\t\"./EditPage/FactListViewNew/AnimationSettings.js\": [\n\t\t128,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t29\n\t],\n\t\"./EditPage/FactListViewNew/BarBrush\": [\n\t\t116,\n\t\t9,\n\t\t46\n\t],\n\t\"./EditPage/FactListViewNew/BarBrush.js\": [\n\t\t116,\n\t\t9,\n\t\t46\n\t],\n\t\"./EditPage/FactListViewNew/DraggableFactCard\": [\n\t\t115,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5,\n\t\t34\n\t],\n\t\"./EditPage/FactListViewNew/DraggableFactCard.js\": [\n\t\t115,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5,\n\t\t34\n\t],\n\t\"./EditPage/FactListViewNew/FactCard\": [\n\t\t108,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5,\n\t\t35\n\t],\n\t\"./EditPage/FactListViewNew/FactCard.js\": [\n\t\t108,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5,\n\t\t35\n\t],\n\t\"./EditPage/FactListViewNew/FactChartEditor\": [\n\t\t118,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t23\n\t],\n\t\"./EditPage/FactListViewNew/FactChartEditor.js\": [\n\t\t118,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t23\n\t],\n\t\"./EditPage/FactListViewNew/FactList\": [\n\t\t129,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t20\n\t],\n\t\"./EditPage/FactListViewNew/FactList.js\": [\n\t\t129,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t20\n\t],\n\t\"./EditPage/FactListViewNew/MoreFactsSelections\": [\n\t\t125,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t25\n\t],\n\t\"./EditPage/FactListViewNew/MoreFactsSelections.js\": [\n\t\t125,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t25\n\t],\n\t\"./EditPage/FactListViewNew/NumericalFilter\": [\n\t\t111,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t39,\n\t\t47\n\t],\n\t\"./EditPage/FactListViewNew/NumericalFilter.js\": [\n\t\t111,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t39,\n\t\t47\n\t],\n\t\"./EditPage/FactListViewNew/RfactsSettings\": [\n\t\t110,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t30\n\t],\n\t\"./EditPage/FactListViewNew/RfactsSettings.js\": [\n\t\t110,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t30\n\t],\n\t\"./EditPage/FactListViewNew/RightBottomButton\": [\n\t\t126,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t28\n\t],\n\t\"./EditPage/FactListViewNew/RightBottomButton.js\": [\n\t\t126,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t28\n\t],\n\t\"./EditPage/FactListViewNew/TopicSettings\": [\n\t\t124,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t31\n\t],\n\t\"./EditPage/FactListViewNew/TopicSettings.js\": [\n\t\t124,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t31\n\t],\n\t\"./EditPage/FactListViewNew/index\": [\n\t\t51,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./EditPage/FactListViewNew/index.js\": [\n\t\t51,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./EditPage/FactListViewNew/index.less\": [\n\t\t260,\n\t\t7,\n\t\t61\n\t],\n\t\"./EditPage/FactListViewNew/schemaTest\": [\n\t\t127,\n\t\t9,\n\t\t48\n\t],\n\t\"./EditPage/FactListViewNew/schemaTest.js\": [\n\t\t127,\n\t\t9,\n\t\t48\n\t],\n\t\"./EditPage/HeaderOperatorView\": [\n\t\t52,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t14\n\t],\n\t\"./EditPage/HeaderOperatorView/\": [\n\t\t52,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t14\n\t],\n\t\"./EditPage/HeaderOperatorView/HeaderOperatorView\": [\n\t\t130,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t27\n\t],\n\t\"./EditPage/HeaderOperatorView/HeaderOperatorView.js\": [\n\t\t130,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t27\n\t],\n\t\"./EditPage/HeaderOperatorView/HeaderOperatorView.less\": [\n\t\t264,\n\t\t7,\n\t\t63\n\t],\n\t\"./EditPage/HeaderOperatorView/index\": [\n\t\t52,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t14\n\t],\n\t\"./EditPage/HeaderOperatorView/index.js\": [\n\t\t52,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t14\n\t],\n\t\"./EditPage/MobileTabView/MobileTab\": [\n\t\t140,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t21\n\t],\n\t\"./EditPage/MobileTabView/MobileTab.js\": [\n\t\t140,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t21\n\t],\n\t\"./EditPage/MobileTabView/MobileTab.less\": [\n\t\t272,\n\t\t7,\n\t\t64\n\t],\n\t\"./H5page\": [\n\t\t59,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t5,\n\t\t15\n\t],\n\t\"./H5page/\": [\n\t\t59,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t5,\n\t\t15\n\t],\n\t\"./H5page/H5page\": [\n\t\t137,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t5,\n\t\t33\n\t],\n\t\"./H5page/H5page.js\": [\n\t\t137,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t5,\n\t\t33\n\t],\n\t\"./H5page/index\": [\n\t\t59,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t5,\n\t\t15\n\t],\n\t\"./H5page/index.js\": [\n\t\t59,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t5,\n\t\t15\n\t],\n\t\"./Homepage\": [\n\t\t60,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t11\n\t],\n\t\"./Homepage/\": [\n\t\t60,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t11\n\t],\n\t\"./Homepage/Content/ContentView\": [\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t3,\n\t\t37,\n\t\t44\n\t],\n\t\"./Homepage/Content/ContentView.js\": [\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t3,\n\t\t37,\n\t\t44\n\t],\n\t\"./Homepage/Content/ContentView.less\": [\n\t\t266,\n\t\t7,\n\t\t65\n\t],\n\t\"./Homepage/Homepage\": [\n\t\t138,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t22\n\t],\n\t\"./Homepage/Homepage.js\": [\n\t\t138,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t22\n\t],\n\t\"./Homepage/Homepage.less\": [\n\t\t271,\n\t\t7,\n\t\t66\n\t],\n\t\"./Homepage/PannelView\": [\n\t\t53,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t12\n\t],\n\t\"./Homepage/PannelView/\": [\n\t\t53,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t12\n\t],\n\t\"./Homepage/PannelView/PannelView\": [\n\t\t131,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t24\n\t],\n\t\"./Homepage/PannelView/PannelView.js\": [\n\t\t131,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t24\n\t],\n\t\"./Homepage/PannelView/PannelView.less\": [\n\t\t265,\n\t\t7,\n\t\t67\n\t],\n\t\"./Homepage/PannelView/index\": [\n\t\t53,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t12\n\t],\n\t\"./Homepage/PannelView/index.js\": [\n\t\t53,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t12\n\t],\n\t\"./Homepage/index\": [\n\t\t60,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t11\n\t],\n\t\"./Homepage/index.js\": [\n\t\t60,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 240;\nmodule.exports = webpackAsyncContext;","import { facts2charts } from '../tool/fact2vis';\nimport ActionType from '../action/type';\nimport { genTitle } from \"../sentencer/index\";\nimport _ from 'lodash';\nimport * as d3 from 'd3';\n//let visData = sessionStorage.getItem('visData') ? JSON.parse(sessionStorage.getItem('visData')) : {};\nlet uuid = localStorage.getItem('uuid') ? JSON.parse(sessionStorage.getItem('uuid')) : null;\nconst plur = require('plur');\n\nconst convertField = function (field, param = 'single') {\n    let gb = field\n    if (param === 'single')\n        return gb\n    else if (param === 'plural') {\n        if (gb.indexOf(' of ') !== -1) {\n            let gbWords = gb.split(\" \")\n            let gbWordIndex = gbWords.indexOf(\"of\") - 1\n            if (gbWordIndex > -1) {\n                let plurWord = plur(gbWords[gbWordIndex], 2)\n                return gb.replace(gbWords[gbWordIndex], plurWord)\n            }\n        } else\n            return plur(gb, 2)\n    }\n}\n\n\nconst initialState = {\n    fileName: '.csv',\n    real_filename : '.csv',\n    title: '',\n    subtitle: '',\n    data: [],\n    schema: [],\n    method: 'sig',\n    facts: [],\n    unusedFacts: [],\n    relations: [],\n    hoverFactIndex: -1,\n    selectedFactIndex: '',\n    maxStoryLength: 6,\n    timeLimit: 2000,// for each iteration\n    information: 40, // default 50 bits for 6 facts\n    resultCoverage: 1,\n    chartDiversity: 0,\n    aggregationLevel: 0,\n    rewardWeight: {\n        logicality: 0.33,\n        diversity: 0.33,\n        integrity: 0.33,\n    },\n    generateProgress: 0,\n    visData: {},\n    uuid,\n    historyStory: '',\n    isExportPdf: true,\n    generateUrl: '',//dataUrl for H5,\n\n    //edit filters\n    filters: [],\n    filtersTitle: '',\n    datares: [],\n    schemaFilter: [],\n    filtersChangeFlag: false,\n    editstate: false,\n    editingCurrentFact: null,\n    //local filters\n    filtersLocal: [],\n    filtersTitleLocal: '',\n    dataresLocal: [],\n    schemaFilterLocal: [],\n    leftPaneWidth:'21%',//left pannel\n    rightPaneWidth:'21%',\n    //origin filters\n    filtersOrigin:[],\n    filtersTitleOrigin:'',\n\n    animationFlag: false, //this button is to change the facts to animated facts\n    animationType: \"顺序播放\",\n\n    //algorithm select\n    algorithm:'MCTS',\n    calSimilarityType:'trans',\n    maximumFact:1,\n    recommendedSfacts:[],\n    recommendedEfacts:[],\n    recommendedMfacts:[],\n    layoutFlag:false,\n    interpolationFlag:false,\n    //meta\n    specIndex:-1,//状态为0时 清空edit页面\n    timeline: [],\n\n\n};\n\nexport default (state = initialState, action) => {\n    const newState = Object.assign({}, state);\n    let newFacts;\n    let newFactsCopy;\n    let specIndex1;\n    switch (action.type) {\n        case ActionType.INIT_RELATION:\n            newState.relations = action.storyRelations;\n            newState.resultCoverage = 0;\n            return newState;\n        case ActionType.INIT_FACT:\n            newState.facts = action.storyFacts;\n            newState.resultCoverage = 0;\n            return newState;\n        case ActionType.SELECT_FACT:\n            newState.selectedFactIndex = action.index;\n            return newState;\n        case ActionType.ADD_FACT:\n            newFacts = newState.unusedFacts.slice();\n            newState.unusedFacts = newFacts.concat(action.facts);;\n            return newState;\n        case ActionType.UPDATE_FACT:\n            newState.selectedFactIndex = action.index;\n            let fact = _.cloneDeep(action.fact);\n            // fact.chart = getFactChartType(fact, state.data);\n            newFacts = newState.facts.slice();\n            newFacts[action.index] = fact;\n            newState.facts = newFacts;\n            newState.relations = Array(newState.facts.length).fill('none'); // reset relations\n            // newState.timeline.push(newState)\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.INSERT_FACT:\n            newFacts = newState.facts.slice();\n            let newUnusedFacts = newState.unusedFacts.slice();\n            let newFact = newUnusedFacts.splice(action.index, 1)[0];\n            newFacts.splice(action.insert, 0, newFact);\n            newFactsCopy=_.cloneDeep(newFacts)\n            newFactsCopy=newFactsCopy.map((item,i)=>{\n                item.index=i\n                return item\n            })\n            newState.facts = newFactsCopy;\n            newState.unusedFacts = newUnusedFacts;\n            newState.relations = Array(newFacts.length).fill('none'); // reset relations\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.INSERT_RECOMMENDEDFACT:\n            newFacts = newState.facts.slice();\n            let newUnusedRFacts;\n            if(action.factLocation===\"first\") {\n                newUnusedRFacts = newState.recommendedSfacts.slice();\n            }\n            else if(action.factLocation===\"last\") {\n                newUnusedRFacts = newState.recommendedEfacts.slice();\n            }\n            else newUnusedRFacts = newState.recommendedMfacts.slice();\n            let newFact1 = newUnusedRFacts.splice(action.index, 1)[0];\n            newFacts.splice(action.insert, 0, newFact1);\n            newFactsCopy=_.cloneDeep(newFacts)\n            newFactsCopy=newFactsCopy.map((item,i)=>{\n                item.index=i\n                return item\n            })\n            newState.facts = newFactsCopy;\n            // newState.unusedFacts = newUnusedFacts;\n            newState.relations = Array(newFacts.length).fill('none'); // reset relations\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.DELETE_FACT:\n            newFacts = newState.facts.slice();\n            newFacts.splice(action.index, 1);\n            // newState.selectedFactIndex = action.index > 0 ? action.index - 1 : 0;\n            if (newFacts.length === 0) {\n                // add default fact\n                // let newFact = new Fact(FactType.VALUE);\n                // newFacts.push(newFact);\n            }\n            newFactsCopy=_.cloneDeep(newFacts)\n            newFactsCopy=newFactsCopy.map((item,i)=>{\n                item.index=i\n                return item\n            })\n            newState.facts = newFactsCopy;\n            newState.selectedFactIndex = '';\n            // newState.selectedFactIndex = newFacts.length - 1;\n            newState.relations = Array(newState.facts.length).fill('none'); // reset relations\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.DELETE_UNUSEDFACT:\n            newFacts = newState.unusedFacts.slice();\n            newFacts.splice(action.index, 1);\n            newState.unusedFacts = newFacts;\n            return newState;\n        case ActionType.ORDER_FACTS:\n            newFacts = newState.facts.slice();\n            const [moved] = newFacts.splice(action.sourceIndex, 1);\n            newFacts.splice(action.destinationIndex, 0, moved);\n            // newFacts.splice(action.sourceIndex < action.destinationIndex ? action.destinationIndex - 1 : action.destinationIndex, 0, moved);\n            newFactsCopy=_.cloneDeep(newFacts)\n            newFactsCopy=newFactsCopy.map((item,i)=>{\n                item.index=i\n                return item\n            })\n            newState.facts = newFactsCopy;\n            newState.selectedFactIndex = action.destinationIndex;\n            newState.relations = Array(newState.facts.length).fill('none'); // reset relations\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.SET_HOVER_INDEX:\n            newState.hoverFactIndex = action.index;\n            return newState;\n        case ActionType.CHANGE_METHOD:\n            newState.method = action.method;\n            return newState;\n        case ActionType.SET_STORY_PARAMETER:\n            newState.maxStoryLength = action.maxStoryLength;\n            newState.information = action.information;\n            newState.chartDiversity = action.chartDiversity;\n            if (action.chartDiversity !== state.chartDiversity) {\n                newFacts = newState.facts.slice();\n                //newFacts = facts2charts(newFacts, state.data, action.chartDiversity);\n                newFacts = facts2charts(newFacts, state.schema, action.chartDiversity);\n                newState.facts = newFacts;\n            }\n            newState.timeLimit = action.timeLimit;\n            return newState;\n\n        case ActionType.SET_AGGREGATION_LEVEL:\n            newState.aggregationLevel = action.level;\n            return newState;\n\n        case ActionType.SET_REWARD_WEIGHT:\n            let newWeight = Object.assign({}, newState.rewardWeight);\n            newWeight.logicality = action.logicality;\n            newWeight.diversity = action.diversity;\n            newWeight.integrity = action.integrity;\n            newState.rewardWeight = newWeight;\n            return newState;\n\n        case ActionType.GENERATE_STORY:\n            newState.facts = action.facts;\n            newState.relations = action.relations;\n            newState.resultCoverage = action.coverage;\n            // newState.selectedFactIndex = action.facts.length - 1\n            newState.selectedFactIndex = ''\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n\n        case ActionType.UPDATE_PROGRESS:\n            newState.generateProgress = Number(((action.totalLength - action.currentLength) / action.totalLength).toFixed(2) * 100);\n            return newState;\n        case ActionType.EXPORT_PDF:\n            newState.isExportPdf = action.isExportPdf;\n            return newState;\n        case ActionType.CHANGE_TITLE:\n            newState.title = action.title;\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.CHANGE_SUBTITLE:\n            newState.subtitle = action.subtitle;\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.CHANGE_CURRENT_EDITING:\n            newState.editstate = action.editstate;\n            newState.editingCurrentFact = action.editingCurrentFact;\n            return newState;\n        case ActionType.CHANGE_ALGORITHM:\n            newState.algorithm=action.algorithm;\n            newState.calSimilarityType=action.calSimilarityType;\n            newState.maximumFact=action.maximumFact;\n            return newState;\n        case ActionType.ADD_SFACT://starting_facts\n            newFacts = newState.recommendedSfacts.slice();\n            newState.recommendedSfacts = newFacts.concat(action.facts);\n            return newState;\n        case ActionType.ADD_EFACT://ending_facts\n            newFacts = newState.recommendedEfacts.slice();\n            newState.recommendedEfacts = newFacts.concat(action.facts);\n            return newState;\n        case ActionType.ADD_MFACT://middle_facts\n            // newState.recommendedMfacts=action.facts\n            newFacts = newState.recommendedMfacts.slice();\n            newState.recommendedMfacts = newFacts.concat(action.facts);\n            return newState;\n        case ActionType.DELETE_SFACT://delete starting_facts\n            newFacts = newState.recommendedSfacts.slice();\n            newFacts.splice(action.index, 1);\n            newState.recommendedSfacts = newFacts;\n            return newState;\n        case ActionType.DELETE_EFACT://delete ending_facts\n            newFacts = newState.recommendedEfacts.slice();\n            newFacts.splice(action.index, 1);\n            newState.recommendedEfacts = newFacts;\n            return newState;\n        case ActionType.DELETE_MFACT://delete middle_facts\n            newFacts = newState.recommendedMfacts.slice();\n            newFacts.splice(action.index, 1);\n            newState.recommendedMfacts = newFacts;\n            return newState;\n        case ActionType.OPTIMIZE_LAYOUT:\n            newState.layoutFlag=action.layoutFlag\n            return newState;\n        case ActionType.CHANGE_INTERPOLATIONFLAG:\n            newState.interpolationFlag=action.interpolationFlag\n            return newState\n\n        case ActionType.INSERT_EMPTY_FACT:\n            newFacts = newState.facts.slice();\n            newFacts.splice(action.insert, 0, action.emptyFact);\n            newFactsCopy=_.cloneDeep(newFacts)\n            newFactsCopy=newFactsCopy.map((item,i)=>{\n                item.index=i\n                return item\n            })\n            newState.facts = newFactsCopy;\n            newState.relations = Array(newFacts.length).fill('none'); // reset relations\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n        case ActionType.INSERT_INTERPOLATED_FACTS:\n            newFacts = newState.facts.slice();\n            action.interpolatedFacts.unshift(action.insert,0)\n            Array.prototype.splice.apply(newFacts,action.interpolatedFacts)\n            newFactsCopy=_.cloneDeep(newFacts)\n            newFactsCopy=newFactsCopy.map((item,i)=>{\n                item.index=i\n                return item\n            })\n            newState.facts = newFactsCopy;\n            newState.relations = Array(newFacts.length).fill('none'); // reset relations\n            newState.specIndex ++;\n            specIndex1=newState.specIndex\n            newState.timeline.splice(specIndex1,newState.timeline.length-specIndex1,newState)\n            return newState;\n\n        case ActionType.UPLOAD_DATA:\n            newState.fileName = action.fileName;\n            newState.real_filename = action.real_filename;\n            newState.title = genTitle(action.real_filename);\n            newState.facts = [];\n            newState.relations = [];\n            newState.schema = action.schema;\n            newState.data = action.data;\n            newState.filters = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n\n            newState.filtersTitle = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n            newState.filtersOrigin = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n\n            newState.filtersTitleOrigin = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n            newState.datares = action.data;\n            newState.schemaFilter = action.schema;\n\n\n            let subStorytitle = \"Data Scope: \";\n            let filtersTitleCore = '';\n            if(newState.filtersTitle!==''){\n                newState.filtersTitle.map((item, index) => {\n                    if (item.type === \"categorical\" ||item.type===\"geographical\"|| item.type === \"temporal\") {\n                        if (index === newState.filtersTitle.length - 1)\n                            filtersTitleCore += `[${item.title}]`\n                        else filtersTitleCore += `[${item.title}], `\n                    }\n                  \n                })             \n            }\n            subStorytitle += filtersTitleCore\n            newState.subtitle=subStorytitle\n\n            newState.filtersLocal = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n\n            newState.filtersTitleLocal = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n\n            newState.dataresLocal = action.data;\n            newState.schemaFilterLocal = action.schema;\n            //  newState.filtersChangeFlag = false;\n            //console.log(\"UPLOAD_DATA\",newState.data)\n            return newState\n        case ActionType.CONNECT_DATA:\n            newState.fileName = action.fileName;\n            newState.real_filename = action.real_filename;\n            newState.title = genTitle(action.real_filename);\n            newState.facts = [];\n            newState.relations = [];\n            newState.schema = action.schema;\n            newState.data = action.data;\n            newState.resultCoverage = 0;\n\n            newState.filters = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n            newState.filtersTitle = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n            newState.filtersOrigin = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n\n            newState.filtersTitleOrigin = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n\n            newState.datares = action.data;\n            newState.schemaFilter = action.schema;\n            newState.filtersLocal = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n\n            newState.filtersTitleLocal = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n            newState.dataresLocal = action.data;\n            newState.schemaFilterLocal = action.schema;\n            //  newState.filtersChangeFlag = false;\n            //console.log(\"CONNECT_DATA\", newState)\n            return newState\n        case ActionType.UPDATE_COMMENT_STORY_INFO:\n            //sessionStorage.setItem('storyData', JSON.stringify(action.visData));\n            newState.facts = action.facts;\n            newState.relations = action.relations;\n            newState.schema = action.schema;\n            newState.data = action.data;\n            newState.title = action.title || '';\n            newState.subtitle = action.subtitle || '';\n            newState.fileName = action.fileName || '';\n            newState.real_filename = action.real_filename || '';\n            newState.storyParameter = action.storyParameter\n            newState.aggregationLevel = action.aggregationLevel;\n            newState.resultCoverage = action.resultCoverage;\n            newState.historyStory = {\n                historyfacts: newState.facts,\n                historyTitle: newState.title,\n                historySubtitle: newState.subtitle,\n                historStoryParameter: newState.storyParameter,\n                historyAggregationLevel: newState.aggregationLevel,\n                historyResultCoverage: newState.resultCoverage\n            }\n\n            newState.filters = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n            newState.filtersTitle = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n\n            newState.datares = action.data;\n            newState.schemaFilter = action.schema;\n\n            newState.filtersLocal = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\").map(d => {\n                if (d.type === 'numerical') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values.map(d => d.replace(',', '')), 'value1': [Math.min(...d.values.map(d => d.replace(',', ''))), Math.max(...d.values.map(d => d.replace(',', '')))] };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values, 'value2': [0, 100], 'value3': [0, d.values.length - 1] };\n                } else {\n                    return { 'field': d.field, 'type': 'equal', 'value': d.values }\n                }\n\n            });\n\n            newState.filtersTitleLocal = action.schema.filter(d => d.type !== 'text' && d.type !== \"ID\" && (d.type === 'categorical' || d.type === 'temporal'||d.type==='geographical')).map(d => {\n                if (d.type === 'categorical'||d.type==='geographical') {\n                    return { 'field': d.field, 'type': d.type, 'title': 'All ' + convertField(d.field, 'plural') };\n                } else if (d.type === 'temporal') {\n                    return { 'field': d.field, 'type': 'temporal', 'title': d.values[0] + '-' + d.values[d.values.length - 1] };\n                }\n            });\n            newState.dataresLocal = action.data;\n            newState.schemaFilterLocal = action.schema;\n            //  newState.filtersChangeFlag = false;\n            return newState\n        case ActionType.VISUALIZE_DATA:\n            // sessionStorage.setItem('visData', JSON.stringify(action.visData));\n            newState.visData = action.visData\n            return newState\n        case ActionType.UPDATE_UUID:\n            localStorage.setItem('uuid', JSON.stringify(action.uuid));\n            newState.uuid = action.uuid\n            return newState\n        case ActionType.UPDATE_DATA_URL:\n            newState.generateUrl = action.generateUrl\n            return newState\n        //change facts to animated facts\n        case ActionType.CHANGE_TO_ANIMATION:\n            newState.animationFlag = action.animationFlag\n            return newState\n\n        //pannel width update\n        case ActionType.UPDATE_PANNEL_WIDTH:\n            newState.leftPaneWidth = action.leftPaneWidth\n            newState.rightPaneWidth = action.rightPaneWidth\n            return newState\n            \n        //editor filters\n        case ActionType.UPDATE_FILTERS:\n            let schemaNoTextID = _.cloneDeep(newState.schema).filter(d => d.type !== 'text' && d.type !== \"ID\")\n\n            let dataclone = _.cloneDeep(newState.data);\n            let datares1 = [];\n            let filters = action.filters;\n            filters.map((item, index) => {\n                datares1 = [];\n\n                let itemfield = item.field;//Brand\n                item.value.map(item1 => {//BMW,Ford\n                    if (schemaNoTextID[index].type === \"numerical\") datares1.push(...dataclone.filter(filter => filter[itemfield] == parseFloat(item1)))\n                    else datares1.push(...dataclone.filter(filter => filter[itemfield] == item1))\n\n                })\n                dataclone = datares1;\n\n            })\n         \n            let schemaFilter1 = _.cloneDeep(newState.schema)\n            let filtersField = [];\n            for(let i = 0; i < filters.length; i++) {\n                filtersField.push(filters[i].field);\n            }\n\n            for(let i=0; i<schemaFilter1.length;i++){\n                if(schemaFilter1[i].type===\"ID\"||schemaFilter1[i].type===\"text\") {continue;}\n                let field = schemaFilter1[i].field;\n                let filtersIndex = filtersField.indexOf(field);\n                \n                schemaFilter1[i].values = _.cloneDeep(filters[filtersIndex].value);\n                if (schemaFilter1[i].type === \"numerical\") {\n                    schemaFilter1[i].mean = d3.mean(filters[filtersIndex].value)\n                    schemaFilter1[i].median = d3.median(filters[filtersIndex].value)\n                    schemaFilter1[i].std = d3.deviation(filters[filtersIndex].value)\n                    schemaFilter1[i].var = d3.variance(filters[filtersIndex].value)\n                }\n            }\n            newState.filters = action.filters;\n            newState.datares = datares1;\n            newState.schemaFilter = schemaFilter1;\n\n            return newState;\n        case ActionType.UPDATE_FILTERS_TITLE:\n            newState.filtersTitle = action.filtersTitle;\n            return newState;\n        case ActionType.UPDATE_DATARES:\n            newState.datares = action.dateres;\n            return newState;\n        case ActionType.UPDATE_SCHEMA_FILTER:\n            newState.schemaFilter = action.schemaFilter;\n            return newState;\n        case ActionType.UPDATE_FILTERS_CHANGE_FLAG:\n            newState.filtersChangeFlag = action.filtersChangeFlag;\n            return newState;\n        case ActionType.UPDATE_FILTERS_LOCAL:\n            newState.filtersLocal = action.filtersLocal;\n            newState.schemaFilterLocal = action.schemaFilterLocal;\n            newState.dataresLocal = action.dataresLocal;\n            newState.filtersTitleLocal = action.filtersTitleLocal;\n            return newState;\n        // Meta\n        case ActionType.UNDO:\n            if (state.specIndex === 0) {\n                return state\n            }\n            else {\n                const newState = Object.assign({},state)\n                newState.facts = state.timeline[state.specIndex-1].facts\n                newState.title = state.timeline[state.specIndex-1].title\n                newState.subtitle=state.timeline[state.specIndex-1].subtitle\n                newState.filters=state.timeline[state.specIndex-1].filters\n                newState.filtersTitle=state.timeline[state.specIndex-1].filtersTitle\n                newState.datares=state.timeline[state.specIndex-1].datares\n                newState.schemaFilter=state.timeline[state.specIndex-1].schemaFilter\n                newState.filtersTitleLocal=state.timeline[state.specIndex-1].filtersTitleLocal\n                newState.filtersLocal=state.timeline[state.specIndex-1].filtersLocal\n                newState.dataresLocal=state.timeline[state.specIndex-1].dataresLocal\n                newState.schemaFilterLocal=state.timeline[state.specIndex-1].schemaFilterLocal\n                // newState.unusedFacts=state.timeline[state.specIndex-1].unusedFacts\n                // newState.recommendedSfacts=state.timeline[state.specIndex-1].recommendedSfacts\n                // newState.recommendedEfacts=state.timeline[state.specIndex-1].recommendedEfacts\n                newState.recommendedMfacts=[]\n                //恢复默认值\n                newState.hoverFactIndex=-1;\n                newState.selectedFactIndex=\"\";\n                newState.editstate=false;\n                newState.editingCurrentFact=null;\n                newState.specIndex--;\n                return newState\n            }\n        case ActionType.REDO:\n            if (state.specIndex === state.timeline.length-1) {\n                return state\n            }\n            else {\n                const newState = Object.assign({},state);\n                newState.facts = state.timeline[state.specIndex+1].facts\n                newState.title = state.timeline[state.specIndex+1].title\n                newState.subtitle=state.timeline[state.specIndex+1].subtitle\n                newState.filters=state.timeline[state.specIndex+1].filters\n                newState.filtersTitle=state.timeline[state.specIndex+1].filtersTitle\n                newState.datares=state.timeline[state.specIndex+1].datares\n                newState.schemaFilter=state.timeline[state.specIndex+1].schemaFilter\n                newState.filtersTitleLocal=state.timeline[state.specIndex+1].filtersTitleLocal\n                newState.filtersLocal=state.timeline[state.specIndex+1].filtersLocal\n                newState.dataresLocal=state.timeline[state.specIndex+1].dataresLocal\n                newState.schemaFilterLocal=state.timeline[state.specIndex+1].schemaFilterLocal\n                // newState.unusedFacts=state.timeline[state.specIndex+1].unusedFacts\n                // newState.recommendedSfacts=state.timeline[state.specIndex+1].recommendedSfacts\n                // newState.recommendedEfacts=state.timeline[state.specIndex+1].recommendedEfacts\n                newState.recommendedMfacts=[]\n                //恢复默认值\n                newState.hoverFactIndex=-1;\n                newState.selectedFactIndex=\"\";\n                newState.editstate=false;\n                newState.editingCurrentFact=null;\n                newState.specIndex ++;\n                return newState\n            }\n\n        default:\n            break;\n    }\n    return newState;\n}","import ActionType from '../action/type';\nimport LayoutType from '@/constant/LayoutType';\nimport Cookies from 'js-cookie';\nimport OperationType from '@/constant/OperationType'\nimport ConvertType from '@/constant/ConvertType'\n\nlet userInfo = Cookies.get(\"userInfo\") && JSON.parse(Cookies.get(\"userInfo\")) ? JSON.parse(Cookies.get(\"userInfo\")) : {\n    username: \"\",\n    uid: -1\n}\n\nconst initialState = {\n    isLogin: userInfo.uid !== -1,\n    userInfo: userInfo,\n    operateState: OperationType.BEFORE_UPLOAD,// BEFORE_UPLOAD  UPLOADIND UPLOADED FILE_LARGE  GENERATING GENERATED,PUBLISHED\n    convertType: ConvertType.FACTSHEET,\n    currentLocale: '',\n    //\n    clickedMenue: '',\n    isCollapsed: true,\n    isLeftCollapsed: false,\n    updateHeaderbarToggle: false, //默认按钮点击后可以折叠/收缩右侧面板,\n    isOpenLeftFloatMenue: false,\n    layoutType: LayoutType.TABLE,\n    isMobilephoneEnd: false,\n    windowUpScroller: {},\n    userEndSize: '',\n    userEnd:'',\n    cardNumber: 5,\n    isHiddenCommentAStory: false,\n    lastPage:'',\n    OperateRelatedId:{},\n    isShareStory: false,\n    isShowGenerate: false,\n    newPage: '',\n    isToLogout: false,\n    isLeaveCreatePage: false,\n    isInterruptProcess: false,\n    factsheetLayoutType:'Vertical',\n}\n\nexport default (state = initialState, action) => {\n    const newState = Object.assign({}, state);\n    switch (action.type) {\n        case ActionType.UPDATE_USER_INFO:\n            newState.userInfo = action.userInfo;\n            if (action.userInfo.uid === -1) {\n                newState.isLogin = false\n            } else {\n                newState.isLogin = true\n            }\n            return newState;\n\n        case ActionType.UPDATE_USER_OPERATION:\n            newState.operateState = action.operateState\n            return newState;\n        case ActionType.UPDATE_CONVERT_TYPE:\n            newState.convertType = action.convertType\n            return newState;\n        case ActionType.UPDATE_LOCALE:\n            newState.currentLocale = action.currentLocale\n            return newState;\n        // //\n        case ActionType.UPDATE_CLICKED_MENUE:\n            localStorage.setItem('clickedMenue', JSON.stringify(action.item));\n            newState.clickedMenue = action.item;\n            //console.log(\"UPDATE_CLICKED_MENUE\",action.item)\n            return newState;\n        case ActionType.UPDATE_COLLAPSED:\n            // localStorage.setItem('isCollapsed', JSON.stringify(action.isCollapsed));\n            newState.isCollapsed = action.isCollapsed;\n            //console.log(\"UPDATE_COLLAPSED\", newState.isCollapsed)\n            return newState;\n        case ActionType.UPDATE_LEFT_COLLAPSED:\n            // localStorage.setItem('isCollapsed', JSON.stringify(action.isCollapsed));\n            newState.isLeftCollapsed = action.isLeftCollapsed;\n            //console.log(\"UPDATE_COLLAPSED\", newState.isCollapsed)\n            return newState;\n        case ActionType.UPDATE_HEADERBAR_TOGGLE:\n            newState.updateHeaderbarToggle = action.isChangeToggle;\n            return newState;\n        case ActionType.OPEN_LEFT_FOLAT_MENUE:\n            newState.isOpenLeftFloatMenue = action.isOpenLeftFloatMenue;\n            return newState;\n        case ActionType.CHANGE_LAYOUT_TYPE:\n            //localStorage.setItem('layoutType', JSON.stringify(action.layoutType));\n            newState.layoutType = action.layoutType\n            return newState;\n        case ActionType.CHANGE_USEREND:\n            newState.isMobilephoneEnd = action.isMobilephoneEnd\n            return newState;\n        case ActionType.WINDOW_UP_SCROLL:\n            newState.isWindowUpScroll = action.isWindowUpScroll\n            return newState;\n        case ActionType.UPDATA_USER_END_SIZE:\n            newState.userEndSize = action.userEndSize\n            //console.log(\"UPDATA_USER_END_SIZE\",action.userEndSize)\n            return newState;\n        case ActionType.UPDATE_STORY_CARD_NUMBER:\n            newState.cardNumber = action.cardNumber\n            return newState;\n        case ActionType.IS_HIDDEN_COMMENT_STORY:\n            newState.isHiddenCommentAStory = action.isHidden\n            return newState;\n        case ActionType.UPDATE_LAST_PAGE:\n            sessionStorage.setItem('lastPage', JSON.stringify(action.lastPage));\n            newState.lastPage = action.lastPage\n            return newState;\n        case ActionType.UPDATE_SID:\n            localStorage.setItem('OperateRelatedId', JSON.stringify(action.OperateRelatedId));\n            newState.OperateRelatedId = action.OperateRelatedId\n            return newState;\n        case ActionType.SHARE_STORY:\n            newState.isShareStory = action.isShareStory\n            //console.log(\"ActionType.SHARE_STORY\",action.isShareStory)\n            return newState;\n        case ActionType.IS_GENERATE_STORY:\n            newState.isShowGenerate = action.isShowGenerate\n            return newState;\n        case ActionType.TO_NEW_PAGE:\n            newState.newPage = action.newPage\n            return newState;\n        case ActionType.IS_CLICKED_LOGOUT:\n            newState.isToLogout = action.isLogOut\n            return newState;\n        case ActionType.LEAVE_CREATE_PAGE:\n            newState.isLeaveCreatePage = action.isLeaving\n            return newState;\n        case ActionType.IS_INTERRUPT_PROCESS:\n            newState.isInterruptProcess = action.isInterruptProcess\n            return newState;\n        case ActionType.CHANGE_FACTSHEET_LAYOUT_TYPE:\n            newState.factsheetLayoutType = action.factsheetLayoutType\n            return newState;\n        default:\n            break;\n\n    }\n    return newState;\n}","import ActionType from '@/action/type';\n\nconst initialState = {\n    containerSize: {\n        // width: \"750\",\n        // height: \"550\"\n    }\n};\n\nexport default (state = initialState, action) => {\n    const newState = Object.assign({}, state);\n    switch (action.type) {\n        case ActionType.UPDATE_VIS_CONTAINER_SIZE:\n            //console.log(\"UPDATE_VIS_CONTAINER_SIZE\",action.containerSize)\n            newState.containerSize = action.containerSize;\n            return newState;\n        default:\n            break;\n    }\n    return newState;\n}      ","import { combineReducers } from 'redux';\nimport story from './story';\nimport user from './user';\nimport vis from './vis'\n\nexport default combineReducers({\n    story,\n    user,\n    vis\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst middlewares = [\n    thunk\n]\n\nif (process.env.NODE_ENV === 'development' && process.env.TARO_ENV !== 'quickapp') {\n    middlewares.push(require('redux-logger').createLogger())\n}\n\nfunction configureStore(initialState = {}) {\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(...middlewares)\n        )\n    );\n}\n\nconst store = configureStore();\n\nexport default store;","import React, { Component } from \"react\";\n\n\nexport default class LazyLoading extends Component {\n    render() {\n        const { isLoading, error } = this.props\n        // Handle the loading state\n        if (isLoading) {\n            return <div>Loading...</div>;\n        }\n        // Handle the error state\n        else if (error) {\n            return <div>Sorry, there was a problem loading the page.</div>;\n        }\n        else {\n            return null;\n        }\n    }\n};\n\n","import LazyLoading from '@/components/LazyLoadingView/LazyLoading'\nimport Loadable from 'react-loadable'\n\n//React Router Code Spliting \nlet Loading = (url) => {\n    return Loadable({\n        loader: () => import(`@/pages/${url}`),\n        loading: LazyLoading\n    });\n}\nexport default Loading","import React from 'react';\nimport { connect } from 'react-redux'\nimport * as userAction from './action/userAction'\nimport LazyLoading from '@/components/LazyLoadingView/index'\n\n\nimport './App.less';\nimport './common.less';\nimport intl from 'react-intl-universal';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  // useParams\n} from \"react-router-dom\";\n// common locale data\nrequire('intl/locale-data/jsonp/en.js');\nrequire('intl/locale-data/jsonp/zh.js');\n\n// app locale data\nconst locales = {\n  \"en-US\": require('./locales/en-US.json'),\n  \"zh-CN\": require('./locales/zh-CN.json'),\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateLocale: (currentLocale) => dispatch(userAction.updateLocale(currentLocale)),\n  }\n}\nconst mapStateToProps = (state) => ({\n})\n\nclass App extends React.Component {\n\n  state = {\n    initDone: false,\n    currentLocale: ''\n  }\n\n  loadLocales(lang) {\n    // init method will load CLDR locale data according to currentLocale\n    // react-intl-universal is singleton, so you should init it only once in your app\n    intl.init({\n      currentLocale: lang,\n      locales,\n    })\n      .then(() => {\n        this.props.updateLocale(lang)\n        // After loading CLDR locale data, start to render\n        this.setState(\n          { initDone: true, currentLocale: lang });\n      });\n  }\n\n  initDefaultLang = () => {\n    let userDefaultLang = navigator.language || navigator.userLanguage;//常规浏览器语言和IE浏览器\n    let lang = userDefaultLang.substr(0, 2);//截取lang前2位字符\n    if (lang === 'zh') {\n      lang = \"zh-CN\"\n    } else {\n      lang = \"en-US\"\n    }\n    if (this.state.currentLocale !== lang) {\n      this.loadLocales(lang)\n    }\n  }\n\n  componentDidMount() {\n    this.initDefaultLang()\n  }\n  render() {\n    const { initDone, currentLocale } = this.state\n\n\n    const MyRoute = ({ MyComponent, ...rest }) => {\n      return (\n        <Route\n          {...rest}\n          render={routerProps => (\n            <MyComponent\n              intl={intl}\n              initDone={initDone}\n              currentLocale={currentLocale}\n              onChangeLocaleListener={lang => this.loadLocales(lang)}\n              {...routerProps} ></MyComponent>)\n          } />\n      )\n    }\n\n    return (\n      <Router>\n        <Switch>\n          <MyRoute exact path='/' MyComponent={LazyLoading(\"Homepage/index\")} />\n          {/* <MyRoute exact path='/edit/factsheet' MyComponent={LazyLoading('EditPage/EditFactsheet/index')} />\n          <MyRoute exact path='/edit/datavideos' MyComponent={LazyLoading(\"EditPage/EditDataVideos/index\")} />\n          <MyRoute exact path='/edit/datacomics' MyComponent={LazyLoading(\"EditPage/EditDataComics/index\")} />\n          <MyRoute exact path='/edit/dashbooard' MyComponent={LazyLoading(\"EditPage/EditDashboard/index\")} />\n          <MyRoute exact path='/H5/:id' MyComponent={LazyLoading(\"H5page/index\")} /> */}\n          <MyRoute exact path='/edit/factsheetNew' MyComponent={LazyLoading('EditPage/EditFactsheetNew/index')} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport './index.css';\nimport 'calliope-chart/lib/font.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n    SIMILARITY: 'similarity',\n    ELABORATION: 'elaboration',\n    GENERALIZATION: 'generalization',\n    CONTRAST: 'contrast',\n    TEMPORAL: 'temporal',\n    CAUSE: 'cause-effect',\n    OTHERS: 'others'\n}","export default {\n    NUMERICAL: 'numerical',\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEOGRAPHICAL: 'geographical',\n    Text:'text'\n}","export default {\n    JUXTAPOSITION: 'juxtaposition',\n    AREA_CHART: 'Area Chart',\n    VERTICAL_BAR_CHART: 'Vertical Bar Chart',\n    VERTICAL_DIFFERENCE_BAR_CHART: 'Vertical Difference Bar Chart',\n    VERTICAL_DIFFERENCE_ARROW_CHART: 'Vertical Difference Arrow Chart',\n    HORIZONTAL_BAR_CHART: 'Horizontal Bar Chart',\n    PROGRESS_BAR_CHART: 'Progress Bar Chart',\n    STACKED_BAR_CHART: 'Stacked Bar Chart',\n    ISOTYPE_BAR_CHART: 'Isotype Bar Chart',\n    PROPORTION_ISOTYPE_CHART: 'Proportion Isotype Chart',\n    COLOR_FILLING_MAP: 'Color Filling Map',\n    BUBBLE_CHART: 'Bubble Chart',\n    TEXT_CHART: 'Text Chart',\n    LINE_CHART: 'Line Chart',\n    STACKED_LINE_CHART: 'Stacked Line Chart',\n    RING_CHART: 'Ring Chart',\n    HALF_RING_CHART: 'Half Ring Chart',\n    PIE_CHART: 'Pie Chart',\n    SCATTER_PLOT: 'Scatter Plot',\n    TREE_MAP: 'Treemap',\n    BUBBLE_MAP: 'Bubblemap'\n}","const datafilter = (data, subspace) => {\n    let filteredData = data;\n    for (const sub of subspace) {\n        filteredData = filteredData.filter((x)=>x[sub.field]===sub.value)\n    }\n    return filteredData\n}\n\nexport default datafilter;","import FactType from '../constant/FactType';\nimport ChartType from '../constant/ChartType';\nimport FieldType from '../constant/FieldType';\n//权重\nexport const fact2visAllRules = [\n    //association \n    {\n        \"fact\": FactType.ASSOCIATION,\n        \"chart\": ChartType.SCATTER_PLOT,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL]\n    },\n    //outlier\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n        //\"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.BUBBLE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n        \"rang\": [6, 9]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //extreme\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n        //\"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.TEXT_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //proportion\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PROGRESS_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL,FieldType.GEOGRAPHICAL,FieldType.Text],\n    },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.TREE_MAP,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL,FieldType.GEOGRAPHICAL,FieldType.Text],\n    },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.RING_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL,FieldType.GEOGRAPHICAL,FieldType.Text],\n    },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL,FieldType.GEOGRAPHICAL,FieldType.Text],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     \"rang\": [0, 9]\n    // },\n\n    //rank\n    {\n        \"fact\": FactType.RANK,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL,FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.LINE_CHART,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    //distribution\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.BUBBLE_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.BUBBLE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.TREE_MAP,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n        \"rang\": [6, 10000]\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n        \"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    },\n    //difference\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n        // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    },\n    //categorization\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.TREE_MAP,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [6, 10000]\n    },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.BUBBLE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [6, 9]\n    },\n    //trend\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"rang\": [0, 9],\n        \"breakdownType\": [FieldType.TEMPORAL, FieldType.CATEGORICAL],\n    },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    //     \"rang\": [0, 9],\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.BUBBLE_CHART,\n        \"rang\": [6, 9],\n        \"breakdownType\": [FieldType.TEMPORAL, FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.SCATTER_PLOT,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    //value\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.TEXT_CHART,\n        \"breakdownType\": [],\n    },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [],\n    },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        // \"rang\": [0, 9],\n        \"breakdownType\": [],\n    },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.BUBBLE_MAP,\n        \"breakdownType\": [],\n    },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [],\n    }\n]","import FactType from '../constant/FactType';\nimport ChartType from '../constant/ChartType';\nimport FieldType from '../constant/FieldType';\n//权重\nexport const fact2visRules = [\n    //association \n    {\n        \"fact\": FactType.ASSOCIATION,\n        \"chart\": ChartType.SCATTER_PLOT,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL]\n    },\n    //outlier\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.CATEGORICAL],\n        // \"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n        // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    //     // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    // \"rang\": [6, 9]\n    // },\n    //extreme\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.CATEGORICAL],\n        // \"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.TEXT_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //proportion\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PROGRESS_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL,FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.RING_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL,FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL,FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //\"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.TEXT_CHART,\n    // },\n\n    //rank\n    {\n        \"fact\": FactType.RANK,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n    },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.LINE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    //distribution\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.BUBBLE_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.TREE_MAP,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [6, 10000]\n    },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.PIE_CHART,\n    // },\n    //difference\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n    },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.PIE_CHART,\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    // },\n    //categorization\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.COLOR_FILLING_MAP,\n        \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.TREE_MAP,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [6, 10000]\n    },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.BUBBLE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL],\n        \"rang\": [6, 9]\n    },\n    //trend\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //  \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //\"rang\": [6, 9]\n    // },\n\n    //value\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.TEXT_CHART,\n        \"breakdownType\": [],\n    },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    // }\n]","import {\n    fact2visRules\n} from './fact2visRule';\nimport {\n    fact2visAllRules\n} from './fact2visAllRule';\nimport FieldType from '@/constant/FieldType';\n\n/****\n * 过滤规则： 根据fact.type 和 breakDown.type 筛选支持的图表\n * 其中isEdit===false表示生成阶段，生成阶段优先在推荐规则中过滤，如果找不到，会在全部支持的规则中过滤\n *     isEdit===ture表示编辑阶段，在全部支持的规则中过滤\n */\n\nconst getSupportedChartTypes = (fact, schema, isEdit = false) => {  \n    let breakDown = schema.filter(s => s[\"field\"] === fact.groupby[0])[0];\n    let supportedChartTypes;\n    let rules = isEdit ? fact2visAllRules : fact2visRules;//fact2visRules是推荐规则 \n    supportedChartTypes = rules.filter(x => x.fact === fact.type);\n    if (breakDown) {\n        supportedChartTypes = supportedChartTypes.filter(x => x.breakdownType.indexOf(breakDown.type) !== -1);\n        if (breakDown.type === FieldType.CATEGORICAL && breakDown.values) {\n            supportedChartTypes = supportedChartTypes.filter(x => {\n                if (!x.rang) {\n                    return true\n                } else {\n                    return breakDown.values.length >= x.rang[0] && breakDown.values.length <= x.rang[1]\n                }\n            });\n        }\n        /*******important**** 找不到推荐的图表，就用可以支持的图表显示*****/\n        if (supportedChartTypes.length === 0 && !isEdit) {\n            supportedChartTypes = getSupportedChartTypes(fact, schema, true)\n        }\n        /*******important the end *********/\n    }\n    //console.log(\"supportedChartTypes\", supportedChartTypes)\n    return supportedChartTypes;\n};\nexport default getSupportedChartTypes;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, in general, there is a {{positive/negative}} correlation between {{measure1}} and {{measure2}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, in general, {{measure2}} has a {{positive/negative}} relationship with {{measure1}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, in general, {{measure2}} has a {{positive/negative}} relationship with {{measure1}} (Pearson correlation coefficient = {{parameter}}).',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, there are {{parameter}} categories of {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the data are grouped into {{parameter}} {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the data include {{parameter}} groups of {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, the difference between {{focus1}} and {{focus2}} is {{parameter}} in terms of {{agg}} {{measure}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, {{focus1}} and {{focus2}}\\'s difference on the {{agg}} {{measure}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, {{focus1}} is {{parameter}} {{higher/lower}} than {{focus2}} in terms of {{agg}} {{measure}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, the distribution of the {{agg}} {{measure}}, by different {{groupby}}s, is as follows.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the breakdown of the {{agg}} {{measure}}, by different {{groupby}}s, is as follows.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, here is the distribution of the {{agg}} {{measure}}, by different {{groupby}}s.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, among all {{groupby}}s, {{parameter[0]}} has the {{focus}} {{agg}} {{measure}} value, which is {{parameter[1]}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, {{parameter[0]}} is the {{groupby}} that has the {{focus}} {{agg}} {{measure}} value, which is {{parameter[1]}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, among all {{groupby}}s, {{parameter[0]}} has the {{focus}} {{agg}} {{measure}} value.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, the {{agg}} {{measure}} of {{focus}} is an outlier when compared with that of other {{groupby}}s.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, {{focus}}\\'s {{agg}} {{measure}} is anomalously different from that of other {{groupby}}s\\'.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the {{agg}} {{measure}} of {{focus}} is anomalously different when compared with that of other {{groupby}}s.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, the {{focus}} accounts for {{parameter}} of the {{agg}} {{measure}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the {{focus}} makes up {{parameter}} of the {{agg}} {{measure}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the percentage of the {{focus}} in {{agg}} {{measure}} is {{parameter}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, the top three {{groupby}}s, ordered by their {{agg}} {{measure}}, are {{no.1}}, {{no.2}}, and {{no.3}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, {{no.1}}, {{no.2}}, and {{no.3}} are the three {{groupby}}s that have the highest {{agg}} {{measure}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, {{no.1}}, {{no.2}}, and {{no.3}} are the top three {{groupby}}s in terms of {{agg}} {{measure}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, the {{agg}} {{measure}}  is {{parameter}} over time in general.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the {{agg}} {{measure}}  has a/an {{parameter}} trend.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the {{agg}} {{measure}}  is {{parameter}} over the {{groupby}}s in general.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, the {{agg}} {{measure}} is {{parameter}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the value of the {{agg}} {{measure}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the {{agg}} value of {{measure}} is {{parameter}}.',\n    },\n]\n\nexport default templates;","import FactType from '../../constant/FactType';\nimport association from './association';\nimport categorization from './categorization';\nimport difference from './difference';\nimport distribution from './distribution';\nimport extreme from './extreme';\nimport outlier from './outlier';\nimport proportion from './proportion';\nimport rank from './rank';\nimport trend from './trend';\nimport value from './value';\n\nconst templateCount = 3;\n\nconst pickFactTemplate = function(type, id=-1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case FactType.ASSOCIATION:\n            templates = association;\n            break;\n\n        case FactType.CATEGORIZATION:\n            templates = categorization;\n            break;\n\n        case FactType.DIFFERENCE:\n            templates = difference;\n            break;\n\n        case FactType.DISTRIBUTION:\n            templates = distribution;\n            break;\n\n        case FactType.EXTREME:\n            templates = extreme;\n            break;\n\n        case FactType.OUTLIER:\n            templates = outlier;\n            break;\n\n        case FactType.PROPORTION:\n            templates = proportion;\n            break;\n\n        case FactType.RANK:\n            templates = rank;\n            break;\n\n        case FactType.TREND:\n            templates = trend;\n            break;\n\n        case FactType.VALUE:\n            templates = value;\n            break;\n    \n        default:\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10)%templateCount\n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch(error) {\n        console.error(error);\n        console.log('wrong id:'+id)\n    }\n    return sentence;\n}\n\nexport default pickFactTemplate;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时，总体看， {{measure1}} 和 {{measure2}} 之间存在 {{正/负}} 相关关系.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时，总体看， {{measure1}} 和 {{measure2}} 呈 {{正/负}} 相关.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，总体看， {{measure1}} 和 {{measure2}} 呈 {{正/负}} 相关（皮尔森相关系数={{parameter}}）.',\n    }\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时， {{groupby}} 包含了 {{parameter}} 个类别: {{no.1}}、{{no.2}}、{{no.3}}',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时，数据中的 {{groupby}}s 可以被归为 {{parameter}} 类，包括 {{no.1}}、{{no.2}}、{{no.3}}',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，数据中包含 {{parameter}} 种 {{groupby}}s，分别是 {{no.1}}、{{no.2}}、{{no.3}}.',\n    }\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时，若我们比较 {{focus1}} 和 {{focus2}} 在 {{agg}} {{measure}} 上的差异，它们相差 {{parameter}}.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时， {{focus1}}和 {{focus2}} 在 {{agg}} {{measure}} 上的差值为 {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，如果比较 {{agg}} {{measure}}， {{focus1}} 比 {{focus2}}要 {{高/低}} {{parameter}}.',\n    }\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时， {{agg}} {{measure}} 在不同 {{groupby}}s 上的数据分布如图所示.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时，将 {{agg}} {{measure}} 根据不同的 {{groupby}}s 进行划分，结果如图所示.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，不同 {{groupby}}s 的 {{agg}} {{measure}} 如图所示.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时， {{parameter[0]}} 的 {{agg}} {{measure}} 等于 {{parameter[1]}}，在所有的 {{groupby}}s 中是 {{focus}}.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时， {{agg}} {{measure}} 的 {{focus}} 等于 {{parameter[1]}}，其 {{groupby}} 等于 {{parameter[0]}}.',\n\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时， {{parameter[0]}} 的 {{agg}} {{measure}} 取 {{focus}}，等于 {{parameter[1]}}',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时，与其他 {{groupby}}s 相比， {{focus}} 的 {{agg}} {{measure}} 是一个异常值.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时， {{focus}} 的 {{agg}} {{measure}} 和其他 {{groupby}}s 相比有显著差异.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，相比其他 {{groupby}}s， {{focus}} 的 {{agg}} {{measure}} 存在明显差异',\n\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时， {{focus}} 的 {{agg}} {{measure}} 占全部 {{agg}} {{measure}} 的 {{parameter}}.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时， {{focus}} 占 {{agg}} {{measure}} 的 {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时， {{focus}} 在 {{agg}} {{measure}} 中的占比为 {{parameter}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时，根据 {{agg}} {{measure}} 对 {{groupby}}s 进行排名，排名前三的是 {{no.1}}、{{no.2}}、{{no.3}}.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时， {{no.1}}、 {{no.2}}和{{no.3}}是 {{agg}} {{measure}}取值最高的三个 {{groupby}}s.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时， {{no.1}}、 {{no.2}}和{{no.3}}在 {{agg}} {{measure}}的取值上排名前三',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时，总体来看， {{agg}} {{measure}} 在随时间 {{parameter}}.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时， {{agg}} {{measure}} 总体呈 {{parameter}} 趋势.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，总体来看， {{agg}} {{measure}} 在随 {{groupby}} {{parameter}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时， {{agg}} {{measure}} 的值等于 {{parameter}}.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时， {{measure}} 的 {{agg}}值是 {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时， {{agg}} {{measure}} 的值是 {{parameter}}.',\n    },\n]\n\nexport default templates;","import FactType from '../../constant/FactType';\nimport association from './association';\nimport categorization from './categorization';\nimport difference from './difference';\nimport distribution from './distribution';\nimport extreme from './extreme';\nimport outlier from './outlier';\nimport proportion from './proportion';\nimport rank from './rank';\nimport trend from './trend';\nimport value from './value';\n\nconst templateCount = 3;\n\nconst pickFactTemplate = function(type, id=-1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case FactType.ASSOCIATION:\n            templates = association;\n            break;\n\n        case FactType.CATEGORIZATION:\n            templates = categorization;\n            break;\n\n        case FactType.DIFFERENCE:\n            templates = difference;\n            break;\n\n        case FactType.DISTRIBUTION:\n            templates = distribution;\n            break;\n\n        case FactType.EXTREME:\n            templates = extreme;\n            break;\n\n        case FactType.OUTLIER:\n            templates = outlier;\n            break;\n\n        case FactType.PROPORTION:\n            templates = proportion;\n            break;\n\n        case FactType.RANK:\n            templates = rank;\n            break;\n\n        case FactType.TREND:\n            templates = trend;\n            break;\n\n        case FactType.VALUE:\n            templates = value;\n            break;\n    \n        default:\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10)%templateCount\n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch(error) {\n        console.error(error);\n        console.log('wrong id:'+id)\n    }\n    return sentence;\n}\n\nexport default pickFactTemplate;","const templates = [\n    {\n        'id': 0,\n        'template': '{{Sentence A}} {{Sentence B}}',\n    },\n    {\n        'id': 1,\n        'template': '{{Sentence A}} {{Sentence B}}',\n    },\n    {\n        'id': 2,\n        'template': '{{Sentence A}} {{Sentence B}}',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{Sentence A}} However, {{Sentence B}}',\n    },\n    {\n        'id': 1,\n        'template': '{{Sentence A}} Nevertheless, {{Sentence B}}',\n    },\n    {\n        'id': 2,\n        'template': '{{Sentence A}} By contrast, {{Sentence B}}',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{Sentence A}} After that, {{Sentence B}}',\n    },\n    {\n        'id': 1,\n        'template': '{{Sentence A}} Later, {{Sentence B}}',\n    },\n    {\n        'id': 2,\n        'template': '{{Sentence A}} Subsequently, {{Sentence B}}',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{Sentence A}} The reason is {{Sentence B}}',\n    },\n    {\n        'id': 1,\n        'template': '{{Sentence A}} This is because {{Sentence B}}',\n    },\n    {\n        'id': 2,\n        'template': '{{Sentence A}} It is due to the fact that {{Sentence B}}',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{Sentence A}} Furthurmore, {{Sentence B}}',\n    },\n    {\n        'id': 1,\n        'template': '{{Sentence A}} In particular, {{Sentence B}}',\n    },\n    {\n        'id': 2,\n        'template': '{{Sentence A}} Specially, {{Sentence B}}',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{Sentence A}} In general, {{Sentence B}}',\n    },\n    {\n        'id': 1,\n        'template': '{{Sentence A}} As a whole, {{Sentence B}}',\n    },\n    {\n        'id': 2,\n        'template': '{{Sentence A}} Generally speaking, {{Sentence B}}',\n    },\n]\n\nexport default templates;","import RelationType from '../../constant/RelationType';\nimport similarity from './similarity';\nimport contrast from './contrast';\nimport temporal from './temporal';\nimport cause from './cause-effect';\nimport elaboration from './elaboration';\nimport generalization from './generalization';\n\nconst templateCount = 3;\n\nconst pickRelationTemplate = function(type, id=-1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case RelationType.SIMILARITY:\n            templates = similarity;\n            break;\n\n        case RelationType.CONTRAST:\n            templates = contrast;\n            break;\n\n        case RelationType.CAUSE:\n            templates = cause;\n            break;\n\n        case RelationType.TEMPORAL:\n            templates = temporal;\n            break;\n\n        case RelationType.ELABORATION:\n            templates = elaboration;\n            break;\n\n        case RelationType.GENERALIZATION:\n            templates = generalization;\n            break;\n    \n        default:\n            templates = Array(templateCount).fill({\n                'template': '{{Sentence A}} {{Sentence B}}',\n            });\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10)%templateCount    \n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch(error) {\n        console.error(error);\n        console.log('wrong type:'+type)\n        console.log('wrong templates:'+templates)\n        console.log('wrong id:'+id)\n    }\n    return sentence;\n}\n\nexport default pickRelationTemplate;","import pickFactTemplate from './fact-templates';\nimport pickFactTemplateZh from './fact-templates-zh'\nimport pickRelationTemplate from './relation-templates';\nimport FactType from '../constant/FactType'\nimport { isValid } from '../view/FactEditor/helper'\nimport AggregationType from '../constant/AggregationType'\nimport _ from 'lodash'\n\nconst plur = require('plur');\nconst convertAggregation = function (aggType) {\n    switch (aggType) {\n        case AggregationType.SUM:\n            return 'total'\n\n        case AggregationType.MAX:\n            return 'maximum'\n\n        case AggregationType.MIN:\n            return 'minimum'\n\n        case AggregationType.AVG:\n            return 'average'\n\n        case AggregationType.MEDIAN:\n            return 'median'\n\n        case AggregationType.COUNT:\n            return 'count'\n\n        case AggregationType.NONE:\n            return ''\n\n        default:\n            return ''\n    }\n}\n\nconst convertAggregationZH = function (aggType) {\n    switch (aggType) {\n        case AggregationType.SUM:\n            return '总'\n\n        case AggregationType.MAX:\n            return '最大'\n\n        case AggregationType.MIN:\n            return '最小'\n\n        case AggregationType.AVG:\n            return '平均'\n        \n        case AggregationType.MEDIAN:\n            return '中'\n\n        case AggregationType.COUNT:\n            return '数量'\n\n        case AggregationType.NONE:\n            return ''\n\n        default:\n            return ''\n    }\n}\n\nconst convertMeasure = function (measure) {\n    if (measure.aggregate === \"count\") return \"\"\n    else return measure.field.toLowerCase();\n}\n\nconst convertGroupby = function (groupby, param = 'single') {\n    let gb = groupby[0]\n    if (param === 'single')\n        return gb.toLowerCase()\n    else if (param === 'plural') {\n        if (gb.indexOf(' of ') !== -1) {\n            let gbWords = gb.split(\" \")\n            let gbWordIndex = gbWords.indexOf(\"of\") - 1\n            if (gbWordIndex > -1) {\n                let plurWord = plur(gbWords[gbWordIndex], 2)\n                return gb.replace(gbWords[gbWordIndex], plurWord)\n            }\n        } else\n            return plur(gb, 2).toLowerCase()\n    }\n}\n\n// for value/difference/categorization\nexport const formatNum = function (num) {\n    num = (num || 0).toString();\n    let number = 0,\n        floatNum = '',\n        intNum = '';\n    if (num.indexOf('.') > 0) {\n        number = num.indexOf('.');\n        floatNum = num.substr(number);\n        intNum = num.substring(0, number);\n    } else {\n        intNum = num;\n    }\n    let result = [],\n        counter = 0;\n    intNum = intNum.split('');\n\n    for (let i = intNum.length - 1; i >= 0; i--) {\n        counter++;\n        result.unshift(intNum[i]);\n        if (!(counter % 3) && i !== 0) { result.unshift(','); }\n    }\n    return result.join('') + floatNum || '';\n}\n\nconst genFactSubspace = function (fact, template) {\n    let subspace = '';\n    if (fact.subspace.length) {\n        fact.subspace.map((key, i) => { return subspace += `${i === 0 ? ' ' : ' and '}the ${key.field} is ${key.value}` })\n        template = template.replace(\"{{subspace}}\", subspace);\n    } else {\n        template = template.replace(\", when {{subspace}}\", '');\n        template = template.replace(\" when {{subspace}}\", '');\n        template = template.replace(\" in case of {{subspace}}\", '');\n        template = template.replace(\" given {{subspace}}\", '');\n        template = template.replace(\"When {{subspace}}, \", '');\n        template = template.replace(\"Given {{subspace}}, \", '');\n        template = template.replace(\"In case of {{subspace}}, \", '');\n        template = template.replace(/^\\S/, s => s.toUpperCase())\n    }\n    return template\n}\nconst genFactSubspaceZh = function (fact, template) {\n    let subspace = '';\n    if (fact.subspace.length) {\n        fact.subspace.map((key, i) => { return subspace += ` ${i === 0 ? ' ' : ' 和 '} ${key.field} 是 ${key.value} ` })\n        template = template.replace(\"{{subspace}}\", subspace);\n    } else {\n        template = template.replace(\"在{{subspace}}中，\", '');\n        template = template.replace(\" 在{{subspace}}中\", '');\n        template = template.replace(\"，当{{subspace}}时\", '');\n        template = template.replace(\"当{{subspace}}时，\", '');\n        template = template.replace(\"当{{subspace}}时\", '');\n    }\n    return template\n}\n\nexport const genFactSentence = function (_fact ,lang) {\n    if (lang === \"en-US\") {\n        if (!isValid(_fact))\n            return ''\n        let fact = _.cloneDeep(_fact)\n        let template = pickFactTemplate(fact.type);\n        let aggregate = AggregationType.NONE;\n        if (fact.measure.length > 0) {\n            aggregate = fact.measure[0].aggregate;\n        }\n        switch (fact.type) {\n            case FactType.ASSOCIATION:\n                template = template.replace(\"{{measure1}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{measure2}}\", convertMeasure(fact.measure[1]));\n                template = template.replace(\"{{agg1}}\", convertAggregation(fact.measure[0].aggregate));\n                template = template.replace(\"{{agg2}}\", convertAggregation(fact.measure[1].aggregate));\n                template = genFactSubspace(fact, template)\n                if (fact.parameter !== '') {\n                    if(Number.parseFloat(fact.parameter)>0) template = template.replace(\"{{positive/negative}}\", \"positive\");\n                    else template = template.replace(\"{{positive/negative}}\", \"negative\");\n                    template = template.replace(\"{{parameter}}\", formatNum(Number.parseFloat(fact.parameter).toFixed(3)));\n                }\n                break;\n\n            case FactType.CATEGORIZATION:\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n                template = genFactSubspace(fact, template)\n                if (fact.parameter.length) {\n                    template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                    let parameterList = ''\n                    fact.parameter.forEach((d, i) => {\n                        parameterList += `${i === 0 ? '' : ','} ${d}`\n                    });\n                    template = template.replace(\"{{no.1}}, {{no.2}}, {{no.3}}\", parameterList);\n                  \n                }\n                if (fact.focus.length) {\n                    if (template.indexOf(\". {{focus}}\") > -1) {\n                        let focusValue = fact.focus[0].value.slice(0, 1).toUpperCase() + fact.focus[0].value.slice(1)\n                        template = template.replace(\"{{focus}}\", focusValue);\n                    } else {\n                        template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                    }\n                } else {\n                    template = template.replace(\", and {{focus}} needs to pay attention\", \"\");\n                    template = template.replace(\", among which {{focus}} needs to pay attention\", \"\");\n                    template = template.replace(\". {{focus}} needs to pay attention\", \"\");\n                }\n                break;\n\n            case FactType.DIFFERENCE:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                if (fact.focus.length >= 2) {\n                    template = template.replace(\"{{focus1}}\", fact.focus[0].value);\n                    template = template.replace(\"{{focus2}}\", fact.focus[1].value);\n                }\n                template = genFactSubspace(fact, template)\n                if (fact.parameter !== '') {\n                    if(typeof(fact.parameter)===\"number\"){\n                        if(fact.parameter>0)  template = template.replace(\"{{higher/lower}}\", 'higher');\n                        else template = template.replace(\"{{higher/lower}}\", 'lower');\n                        template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n                    }\n                    else{\n                        template = template.replace(\"{{higher/lower}}\", fact.parameter[0]);\n                        template = template.replace(\"{{parameter}}\", formatNum(fact.parameter[1]));\n                    }\n                    \n                }\n                break;\n\n            case FactType.DISTRIBUTION:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n                template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n                template = genFactSubspace(fact, template)\n                if (fact.focus.length) {\n                    template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                } else {\n                    template = template.replace(\" and {{focus}} needs to pay attention\", \"\");\n                }\n                break;\n\n            case FactType.EXTREME:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n                template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n                template = genFactSubspace(fact, template)\n                if (fact.focus.length) {\n                    if (fact.focus[0].extremeFocus !== undefined && fact.focus[0].extremeValue !== undefined) {\n                        if (fact.focus[0].extremeFocus === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                        else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                        template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                        template = template.replace(\"{{parameter[1]}}\", formatNum(Math.round(fact.parameter[1] * 100) / 100));\n\n                    } else if (fact.parameter.length) {\n                        if (fact.parameter[0] === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                        else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                        template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                        template = template.replace(\"{{parameter[1]}}\", formatNum(fact.parameter[1]));\n                    }\n                }\n                break;\n\n            case FactType.OUTLIER:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = genFactSubspace(fact, template)\n                if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                break;\n\n            case FactType.PROPORTION:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = genFactSubspace(fact, template)\n                if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                if (fact.parameter) template = template.replace(\"{{parameter}}\", fact.parameter);\n                break;\n\n            case FactType.RANK:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n                template = genFactSubspace(fact, template)\n                if (fact.parameter.length >= 3) {\n                    template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                    template = template.replace(\"{{no.1}}\", ` ${fact.parameter[0]}`);\n                    template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                    if (fact.parameter.length === 3) {\n                        template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                    } else if (fact.parameter.length > 3) {\n                        template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                    } else if (fact.parameter.length === 2) {\n                        template = template.replace(\", {{no.3}}\", '');\n                    }\n                } else {\n                    template = ''\n                }\n                break;\n\n            case FactType.TREND:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n                template = genFactSubspace(fact, template)\n                if (fact.parameter) {\n                    template = template.replace(\"{{parameter}}\", ` ${fact.parameter} `);\n                    if (fact.parameter === 'increasing') {\n                        template = template.replace(\"a/an\", 'an');\n                    } else {\n                        template = template.replace(\"a/an\", 'a');\n                    }\n                }\n                if (fact.focus.length) {\n                    template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                } else {\n                    template = template.replace(\" and the value of {{focus}} needs to pay attention\", \"\");\n                }\n                break;\n\n            case FactType.VALUE:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n                template = genFactSubspace(fact, template)\n                if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n                break;\n\n            default:\n                break;\n        }\n        template = template.slice(0, 1).toUpperCase() + template.slice(1)\n        return template;\n    } else {\n        if (!isValid(_fact))\n            return ''\n        let fact = _.cloneDeep(_fact)\n        let template = pickFactTemplateZh(fact.type);\n        let aggregate = AggregationType.NONE;\n        if (fact.measure.length > 0) {\n            aggregate = fact.measure[0].aggregate;\n        }\n        switch (fact.type) {\n            case FactType.ASSOCIATION:\n                template = template.replace(\"{{measure1}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{measure2}}\", convertMeasure(fact.measure[1]));\n                template = template.replace(\"{{agg1}}\", convertAggregationZH(fact.measure[0].aggregate));\n                template = template.replace(\"{{agg2}}\", convertAggregationZH(fact.measure[1].aggregate));\n                template = genFactSubspaceZh(fact, template)\n                if (fact.parameter !== '') {\n                    if(Number.parseFloat(fact.parameter)>0) template = template.replace(\"{{正/负}}\", \"正\");\n                    else template = template.replace(\"{{正/负}}\", \"负\");\n                    template = template.replace(\"{{parameter}}\", formatNum(Number.parseFloat(fact.parameter).toFixed(3)));\n                }\n                break;\n\n            case FactType.CATEGORIZATION:\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby,'plural'));\n                template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n                template = genFactSubspaceZh(fact, template)\n                if (fact.parameter.length) {\n                    template = template.replace(\"{{parameter}}\", ` ${formatNum(fact.parameter.length)} `);\n                    let parameterList = ''\n                    fact.parameter.forEach((d, i) => {\n                        parameterList += `${i === 0 ? '' : ','} ${d}`\n                    });\n                    template = template.replace(\"{{no.1}}、{{no.2}}、{{no.3}}\", ` ${parameterList}`);\n                    // template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                    // template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                    // if (fact.parameter.length === 3) {\n                    //     template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                    // } else if (fact.parameter.length > 3) {\n                    //     template = template.replace(\"{{no.3}}\", fact.parameter[2] + ', etc');\n                    // } else if (fact.parameter.length === 2) {\n                    //     template = template.replace(\", {{no.3}}\", '');\n                    // }\n                }\n                if (fact.focus.length) {\n                    if (template.indexOf(\". {{focus}}\") > -1) {\n                        let focusValue = fact.focus[0].value.slice(0, 1).toUpperCase() + fact.focus[0].value.slice(1)\n                        template = template.replace(\"{{focus}}\", focusValue);\n                    } else {\n                        template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                    }\n                } else {\n                    template = template.replace(\"，其中{{focus}}需要引起注意\", \"\");\n                }\n                break;\n\n            case FactType.DIFFERENCE:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby,'plural'));\n                if (fact.focus.length >= 2) {\n                    template = template.replace(\"{{focus1}}\", fact.focus[0].value);\n                    template = template.replace(\"{{focus2}}\", fact.focus[1].value);\n                }\n                template = genFactSubspaceZh(fact, template)\n                \n                if (fact.parameter !== '') {\n                    if(fact.parameter>0)  template = template.replace(\"{{高/低}}\", '高');\n                    else template = template.replace(\"{{高/低}}\", '低');\n                    template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n                }\n                break;\n\n            case FactType.DISTRIBUTION:\n              \n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby,'plural'));\n                template = genFactSubspaceZh(fact, template)\n\n                if (fact.focus.length) {\n                    template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                } else {\n                    template = template.replace(\"，其中{{focus}}需要引起注意\", \"\");\n                }\n                break;\n\n            case FactType.EXTREME:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                // template = template.replace(\"{{agg}}\", '');\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby,'plural'));\n                template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n                template = genFactSubspaceZh(fact, template)\n                if (fact.focus.length) {\n                    if (fact.focus[0].extremeFocus !== undefined && fact.focus[0].extremeValue !== undefined) {\n                        if (fact.focus[0].extremeFocus === 'min') { template = template.replace(\"{{focus}}\", '最小'); }\n                        else { template = template.replace(\"{{focus}}\", '最大'); }\n                        template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                        template = template.replace(\"{{parameter[1]}}\", formatNum(Math.round(fact.parameter[1] * 100) / 100));\n\n                    } else if (fact.parameter.length) {\n                        if (fact.parameter[0] === 'min') { template = template.replace(\"{{focus}}\", '最小'); }\n                        else { template = template.replace(\"{{focus}}\", '最大'); }\n                        template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                        template = template.replace(\"{{parameter[1]}}\", formatNum(fact.parameter[1]));\n                    }\n                }\n                break;\n\n            case FactType.OUTLIER:\n                \n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby,'plural'));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby,'plural'));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                template = genFactSubspaceZh(fact, template)\n                \n                if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                break;\n\n            case FactType.PROPORTION:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                // template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby,'plural'));\n                template = genFactSubspaceZh(fact, template)\n                if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                if (fact.parameter) template = template.replace(\"{{parameter}}\", fact.parameter);\n               \n                break;\n\n            case FactType.RANK:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby,'plural'));\n                template = genFactSubspaceZh(fact, template)\n                if (fact.parameter.length >= 3) {\n                    // template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                    template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                    template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                    if (fact.parameter.length === 3) {\n                        template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                    } else if (fact.parameter.length > 3) {\n                        template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                    } else if (fact.parameter.length === 2) {\n                        template = template.replace(\"、{{no.3}}\", '');\n                    }\n                } else {\n                    template = ''\n                }\n                break;\n\n            case FactType.TREND:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n                template = genFactSubspaceZh(fact, template)\n                if (fact.parameter) {\n                    if (fact.parameter === 'increasing') {\n                        template = template.replace(\"{{parameter}}\", '增长');\n                    } else {\n                        template = template.replace(\"{{parameter}}\", '下降');\n                    }\n                }\n                if (fact.focus.length) {\n                    template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                } else {\n                    template = template.replace(\"，其中{{focus}}需要引起注意\", \"\");\n                }\n                break;\n\n            case FactType.VALUE:\n                template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n                template = template.replace(\"{{agg}}\", convertAggregationZH(aggregate));\n                // template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n                template = genFactSubspaceZh(fact, template)\n                // if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n                \n                break;\n\n            default:\n                break;\n        }\n        template = template.slice(0, 1).toUpperCase() + template.slice(1)\n        return template;\n    }\n}\n\n\nexport const genStoryText = function (facts, relations) {\n    let template;\n    let storyText = '';\n    let pairLength = parseInt(facts.length / 2)\n    //console.log(\"relations\", facts, relations)\n    for (let i = 0; i < pairLength; i++) {\n        if (facts[i]) {\n            template = pickRelationTemplate(relations[i * 2 + 1])\n            // template = template.replace(\"{{Sentence A}}\", facts[i * 2].script());\n            // template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].script());\n            template = template.replace(\"{{Sentence A}}\", facts[i * 2].generatedScript);\n            template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].generatedScript);\n            storyText += template + ' '\n        }\n    }\n    if (facts.length % 2) {\n        //storyText += facts[facts.length - 1].script()\n        storyText += facts[facts.length - 1].generatedScript\n    }\n    //console.log(\"storyText\", storyText)\n    return storyText\n}\n\nexport const genSubtitle = function (fact,lang) {\n    if (lang === \"en-US\") {\n        let title;\n        if (!isValid(fact))\n            return ''\n\n        title = 'The ' + fact.type\n        switch (fact.type) {\n            case FactType.ASSOCIATION:\n                title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n                break;\n            case FactType.CATEGORIZATION:\n                // title += ' of ' + fact.groupby[0]\n                title = fact.groupby[0]\n                break;\n\n            case FactType.DIFFERENCE:\n                title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n                break;\n            case FactType.DISTRIBUTION:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.EXTREME:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.OUTLIER:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.PROPORTION:\n                title += ' of ' + fact.focus[0].value\n                break;\n            case FactType.RANK:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.TREND:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.VALUE:\n                title = 'The ' + convertAggregation(fact.measure[0].aggregate) + ' ' + fact.measure[0].field\n                break;\n            default:\n                break;\n        }\n        if (fact.subspace.length) {\n            let subspace = '';\n            fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n            title += subspace;\n        }\n        return title;\n    }else{\n        let title='';\n        if (!isValid(fact))\n            return ''\n        if (fact.subspace.length) {\n                let subspace = '';\n                fact.subspace.map((key, i) => { return subspace += ` ${key.value}` })\n                title += '在 '+ subspace +'中，';\n        }\n        // title = 'The ' + fact.type\n        switch (fact.type) {\n            case FactType.ASSOCIATION:\n                title += fact.measure[0].field + ' 和 ' + fact.measure[1].field + '的相关性'\n                break;\n            case FactType.CATEGORIZATION:\n                // title += ' of ' + fact.groupby[0]\n                title += fact.groupby[0]+'的分类情况'\n                break;\n\n            case FactType.DIFFERENCE:\n                title += fact.focus[0].value + ' 和 ' + fact.focus[1].value +'的差异'\n                break;\n            case FactType.DISTRIBUTION:\n                title += fact.measure[0].field + '的分布'\n                break;\n            case FactType.EXTREME:\n                title += fact.measure[0].field + '的极值'\n                break;\n            case FactType.OUTLIER:\n                title += fact.measure[0].field+'的异常值'\n                break;\n            case FactType.PROPORTION:\n                title +=  fact.focus[0].value + '的占比'\n                break;\n            case FactType.RANK:\n                title += fact.measure[0].field +'的排名'\n                break;\n            case FactType.TREND:\n                title += fact.measure[0].field +'的趋势'\n                break;\n            case FactType.VALUE:\n                switch (convertAggregation(fact.measure[0].aggregate)) {\n                    case AggregationType.SUM:\n                        title += fact.measure[0].field +'的总值'\n                        break;\n            \n                    case AggregationType.MAX:\n                        title += fact.measure[0].field +'的最大值'\n                        break;\n            \n                    case AggregationType.MIN:\n                        title += fact.measure[0].field +'的最小值'\n                        break;\n            \n                    case AggregationType.AVG:\n                        title += fact.measure[0].field +'的平均值'\n                        break;\n            \n                    case AggregationType.COUNT:\n                        title += fact.measure[0].field +'的数量'\n                        break;\n            \n                    case AggregationType.NONE:\n                        title += fact.measure[0].field +'的值'\n                        break;\n            \n                    default:\n                        title += fact.measure[0].field +'的值'\n                        break;\n                        \n                }                \n\n            default:\n                break;\n        }\n        \n        return title;\n    }\n    \n   \n}\n\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}\n","const OperationType = {\n    BEFORE_UPLOAD: 0,\n    UPLOADIND: 1,\n    UPLOADED: 2,\n    GENERATING: 3,\n    GENERATED: 4,\n    FAILED: 5,\n    FILE_LARGE: 6,\n    ADDING: 7,\n    ADD_FAILED: 8,\n    ADDED: 9,\n    PUBLISHED: 10\n}\n\nexport default OperationType;","import React from 'react';\nimport ChartType from '../constant/ChartType';\nimport getSupportedChartTypes from '@/tool/getSupportedChartTypes';\nimport Chart from '../Chart';\nimport { isValid, customizeFact } from '@/view/FactEditor/helper';\nimport _ from 'lodash';\n\nexport const facts2charts = (facts, shema, chartDiversity = 0) => {\n    for (let i = 0; i < facts.length; i++) {\n        let supportedChartTypes = getSupportedChartTypes(shema, facts[i]);\n        let choiceCount = parseInt((supportedChartTypes.length + 1) * chartDiversity);\n        let choicedChartTypes = supportedChartTypes.slice(0, choiceCount + 1);\n        facts[i].chart = choicedChartTypes[Math.floor(Math.random() * choicedChartTypes.length)].chart;\n    }\n    return facts\n}\nexport const getChoice = (length) => {\n    let choice = Math.round(Math.random() * (length - 1));\n    return choice;\n}\n\n\nexport const getFactChartType = (shema, fact, choice = 0) => {\n    let supportedChartTypes = getSupportedChartTypes(fact, shema);\n    if (supportedChartTypes.length === 0) return null;\n    return supportedChartTypes[getChoice(supportedChartTypes.length)].chart;\n}\n\nconst getvischartype = (chart) => {\n    let chartType = chart;\n    switch (chart) {\n        case ChartType.AREA_CHART:\n            chartType = \"areachart\";\n            break;\n        case ChartType.BUBBLE_CHART:\n            chartType = \"bubblechart\";\n            break;\n        case ChartType.COLOR_FILLING_MAP:\n            chartType = \"filledmap\";\n            break;\n        case ChartType.BUBBLE_MAP:\n            chartType = \"bubblemap\";\n            break;\n        case ChartType.HALF_RING_CHART:\n            chartType = \"donutchart\";\n            break;\n        case ChartType.HORIZONTAL_BAR_CHART:\n            chartType = \"horizentalbarchart\";\n            break;\n\n        case ChartType.VERTICAL_BAR_CHART:\n        case ChartType.STACKED_BAR_CHART:\n        case ChartType.VERTICAL_DIFFERENCE_BAR_CHART:\n        case ChartType.ISOTYPE_BAR_CHART:\n        case ChartType.VERTICAL_DIFFERENCE_ARROW_CHART:\n            chartType = \"verticalbarchart\"\n            break;\n        case ChartType.LINE_CHART:\n        case ChartType.STACKED_LINE_CHART:\n            chartType = \"linechart\";\n            break;\n        case ChartType.PROPORTION_ISOTYPE_CHART:\n        case ChartType.PIE_CHART:\n            chartType = \"piechart\";\n            break;\n        case ChartType.PROGRESS_BAR_CHART:\n            chartType = \"progresschart\";\n            break;\n        case ChartType.RING_CHART:\n            chartType = \"donutchart\";\n            break;\n        case ChartType.SCATTER_PLOT:\n            chartType = \"scatterplot\";\n            break;\n        case ChartType.TEXT_CHART:\n            chartType = \"textchart\";\n            break;\n        case ChartType.TREE_MAP:\n            chartType = \"treemap\";\n            break;\n        default:\n            break;\n    }\n    return chartType;\n}\n\nexport const fact2chart = function (specData, uuid, fact, data, size, compound = false) {\n    if (!fact.chart || fact.chart === \"\") {\n        fact.chart = getFactChartType(specData.schema, fact);//针对生成页面的chart\n    }\n\n    let chart = fact.chart;\n    // if (compound) {\n    //     chart = fact.compoundChart;\n    // }\n\n    if (chart === ChartType.ISOTYPE_BAR_CHART) {\n        fact.chart = ChartType.VERTICAL_BAR_CHART;\n    }\n    fact = customizeFact(fact);//important\n    if (!fact.chart || !isValid(fact)) {\n        console.log(\"no valid\", fact)\n        return null;\n    }\n    let specFact = {\n        ...fact,\n        breakdown: fact.groupby.map(d => {\n            return {\n                \"field\": d\n            }\n        })\n    }\n\n    //console.log(\"size\", size)\n    let specChart = {\n        size: size,\n        type: getvischartype(chart),\n        style: \"business\",\n        duration: 0,\n        showSuggestion: true,//显示图表Unsupported\n    }\n    specData = {\n        ...specData,\n        values: data,\n    }\n    let specNew = {\n        data: specData,\n        fact: specFact,\n        chart: specChart,\n    }\n    return <Chart spec={_.cloneDeep(specNew)} uuid={uuid} />\n}\n","export default {\n    SUM: 'sum',\n    MAX: 'max',\n    MIN: 'min',\n    AVG: 'avg',\n    MEDIAN:'median',\n    COUNT: 'count',\n    // NONE: 'none'\n}","export default {\n    \"FACTSHEET\": \"Factsheet\",\n    \"DASHBOARD\": \"Dashboard\",\n    \"DATACOMICS\": \"DataComics\",\n    \"DATAVIDEOS\": \"DataVideos\",\n    \"H5\": \"H5\",\n    \"FACTSHEETNEW\":\"FactsheetNew\"\n}","import ActionType from './type';\n\n\nexport const updateUserInfo = (userInfo) => ({\n    type: ActionType.UPDATE_USER_INFO,\n    userInfo\n})\n\nexport const updateOperation = (operateState) => ({\n    type: ActionType.UPDATE_USER_OPERATION,\n    operateState\n})\n\nexport const updateCovertType = (convertType) => ({\n    type: ActionType.UPDATE_CONVERT_TYPE,\n    convertType\n})\n\nexport const updateLocale = (currentLocale) => ({\n    type: ActionType.UPDATE_LOCALE,\n    currentLocale\n})\n\n\nexport const updateLastPage = (lastPage) => ({\n    type: ActionType.UPDATE_LAST_PAGE,\n    lastPage\n})\nexport const updateClickedMenus = (item) => ({\n    type: ActionType.UPDATE_CLICKED_MENUE,\n    item\n})\n\nexport const setCollapsed = (isCollapsed) => ({\n    type: ActionType.UPDATE_COLLAPSED,\n    isCollapsed\n})\nexport const setLeftCollapsed = (isLeftCollapsed) => ({\n    type: ActionType.UPDATE_LEFT_COLLAPSED,\n    isLeftCollapsed\n})\nexport const hiddenHorizontalMenuView = (isHidden) => ({\n    type: ActionType.HIDDEN_HORIZON_MEMUE,\n    isHidden\n})\n\nexport const updateHeaderbarToggle = (isChangeToggle) => (\n    {\n        type: ActionType.UPDATE_HEADERBAR_TOGGLE,\n        isChangeToggle\n    }\n)\nexport const openLeftFloatMenue = (isOpenLeftFloatMenue) => (\n    {\n        type: ActionType.OPEN_LEFT_FOLAT_MENUE,\n        isOpenLeftFloatMenue\n    }\n)\n\nexport const changeLayOutType = (layoutType) => ({\n    type: ActionType.CHANGE_LAYOUT_TYPE,\n    layoutType\n})\n\nexport const changeUserEnd = (isMobilephoneEnd) => ({\n    type: ActionType.CHANGE_USEREND,\n    isMobilephoneEnd\n})\n\nexport const windowUpScroller = (isWindowUpScroll) => ({\n    type: ActionType.WINDOW_UP_SCROLL,\n    // type,\n    isWindowUpScroll\n})\nexport const updateUserEnd = (userEndSize) => ({\n    type: ActionType.UPDATA_USER_END_SIZE,\n    userEndSize\n})\nexport const updateStoryCardNumber = (cardNumber) => ({\n    type: ActionType.UPDATE_STORY_CARD_NUMBER,\n    cardNumber\n})\n\nexport const isHiddenCommentAStory = (isHidden) => ({\n    type: ActionType.IS_HIDDEN_COMMENT_STORY,\n    isHidden\n})\nexport const updateOperateRelatedId = ({ did, sid }) => ({\n    type: ActionType.UPDATE_SID,\n    OperateRelatedId: { did, sid }\n})\nexport const shareStory = (isShareStory) => ({\n    type: ActionType.SHARE_STORY,\n    isShareStory\n})\nexport const loadingGeneratingView = (isShowGenerate) => ({\n    type: ActionType.IS_GENERATE_STORY,\n    isShowGenerate\n})\n\nexport const toNewPage = (newPage) => ({\n    type: ActionType.TO_NEW_PAGE,\n    newPage\n})\nexport const isClickedLogout = (isLogOut) => ({\n    type: ActionType.IS_CLICKED_LOGOUT,\n    isLogOut\n})\nexport const leaveCreatePage = (isLeaving) => ({\n    type: ActionType.LEAVE_CREATE_PAGE,\n    isLeaving\n})\nexport const interruptGenerateProcess = (isInterruptProcess) => ({\n    type: ActionType.IS_INTERRUPT_PROCESS,\n    isInterruptProcess\n})\nexport const changeFactsheetLayoutType = (factsheetLayoutType) =>({\n    type:ActionType.CHANGE_FACTSHEET_LAYOUT_TYPE,\n    factsheetLayoutType\n})","export default {\n    STORYLINE_WEB: 'storylineweb',\n    FACTSHEET: 'factsheet',\n    SLIDER_MOBILE: 'slidermobile',\n    STORY_TEXT: 'storytext',\n    TABLE: 'table'\n}","import React, { Component } from 'react';\nimport { AutoVis } from \"calliope-chart\";\n\nexport default class Chart extends Component {\n\n    componentDidMount() {\n        const id = this.props.uuid;\n        let spec = this.props.spec;\n        let container = id ? `#vischart_${id}` : \"#demo-chart\";\n        this.autovis = new AutoVis();\n        this.autovis.container(container);\n        this.autovis.load(spec);\n        this.autovis.generate();\n    }\n\n    componentDidUpdate() {\n        const id = this.props.uuid;\n        let container = id ? `#vischart_${id}` : \"#demo-chart\";\n        let spec = this.props.spec;\n        this.autovis.container(container);\n        this.autovis.load(spec);\n        this.autovis.generate();\n    }\n\n    render() {\n        \n        let height = 640, width = 640;\n        if (this.props.spec.chart) {\n            let size = this.props.spec.chart.size;\n            switch (size) {\n                case 'wide':\n                    height = 220;\n                    width = 560;\n                    break;\n                case 'middle':\n                    height = 200;\n                    width = 360;\n                    break;\n                case 'small':\n                    height = 150;\n                    width = 235;\n                    break;\n\n                default:\n                    break;\n            }\n        }\n        const id = this.props.uuid ? this.props.uuid : \"demo-chart\";\n        return (\n            <div id={id ? `vischart_${id}` : 'demo-chart'} style={{\n                height: height, width: width,\n                // borderStyle: 'solid',\n                // borderWidth: 1,\n                // borderColor: 'black',\n                margin: \"0 auto\"\n            }} />\n        )\n    }\n}\n"],"sourceRoot":""}