{"version":3,"sources":["pages/EditPage/FactListView/BarBrush.js"],"names":["draw","props","requestData","info","requestDataValues","values","map","d","replace","data","Map","clear","arr","sort","a","b","parseFloat","value","range","Math","max","min","i","set","length","setname","parseInt","get","key","datum","index","push","margin","width","height","x","d3","y","domain","brush","extent","on","remove","selection","start","end","selected","filter","slice","maxValue","minValue","newData","id","temporalTextDiv","append","attr","style","text","toFixed","filters","filterIndex","type","value1","brushLocation","updateFiltersChangeFlag","svg","context","tickScale","exponent","brushValue","tickValueMultiplier","ceil","abs","updateScale","selectAll","enter","classed","bandwidth","call","brushInitStart","undefined","brushInitEnd"],"mappings":"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","file":"static/js/49.1fbeeb6d.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nconst draw = (props) => {\n\n    // console.log('props.info', props);\n    var requestData = props.info;\n    var requestDataValues = props.info.values.map(d => d.replace(',', '')); //去除数据中的\",\"\" 比如\"1,385.66\"\n    // var requestData = props.filters[props.filterIndex].value;\n    // console.log('requestData', requestData)\n    var data = [];\n\n    var map = new Map();\n\n    map.clear();\n\n    var arr = requestData.values.sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n    });\n    arr = arr.map((value) => {\n        return parseFloat(value);\n    })\n    var range = parseFloat((Math.max(...arr) - Math.min(...arr)) / 20);\n\n\n    for (var i = 0; i < 20; i++) {\n        map.set(i, 0);\n    }\n\n    for (var i = 0; i < arr.length - 1; i++) {\n        var setname = parseInt((arr[i] - Math.min(...arr)) / range);\n        map.set(setname, map.get(setname) + 1);\n    }\n    map.set(19, map.get(19) + 1);\n\n\n    for (let [key, value] of map) {\n        var datum = {};\n        // datum.index = i;\n        datum.index = key;\n        datum.value = value;\n        data.push(datum);\n    }\n\n    // console.log('data',data);\n\n    // var margin = {top: 20, right: 10, bottom: 20, left: 40},\n    var margin = { top: 0, right: 0, bottom: 0, left: 0 },\n        width = 196 - margin.left - margin.right,\n        height = 36 - margin.top - margin.bottom;\n\n\n    var x = d3.scaleBand().range([0, width]),\n        //([0, width], .1),\n        y = d3.scaleLinear().range([height, 0]);\n\n    // var xAxis2 = d3.svg.axis().scale(x).orient(\"bottom\").tickValues([]);\n    x.domain(data.map(function (d) { return d.index }));\n    y.domain([0, Math.max(...map.values())]);\n\n \n\n    var brush = d3.brushX()\n        //  .x(x) \n        .extent([[0, 0], [width, height]])\n        .on(\"brush\", brushed);\n\n\n    var svg = d3.select('#' + props.id).append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      //  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    svg.append(\"rect\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"x\", \"0\")\n        .attr(\"y\", \"0\")\n        .attr(\"fill\", \"#f0f0f0\")\n\n\n\n\n    var context = svg.append(\"g\")\n        .attr(\"class\", \"context\")\n     //   .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    updateScale(data, [0, width]);\n\n    var subBars = context.selectAll('.subBar')\n        .data(data)\n\n    subBars.enter().append(\"rect\")\n        .classed('subBar', true)\n        .attr(\"height\", (d) => height - y(d.value))\n        .attr(\"width\", (d) => x.bandwidth())\n        .attr(\"x\", (d) => x(d.index))\n        .attr(\"y\", (d) => y(d.value))\n        .attr(\"fill\", \"#777\");\n    // .attr(\n    // {\n    // height: function (d)\n    // {\n    //     console.log('ddd', height);\n    //     console.log('ddd', y(d.value))\n    //     return height - y(d.value);\n    // },\n    // width: function(d){ return x.rangeBand()},\n    // x: function(d) {\n\n    //     return x(d.index);\n    // },\n    // y: function(d)\n    // {\n    //     return y(d.value)\n    // }\n    // })\n    context.append(\"g\")\n        .attr(\"class\", \"x brush\")\n        .call(brush)\n        .selectAll(\"rect\")\n        .attr(\"y\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n\n    let brushInitStart = props.filters[props.filterIndex].brushLocation == undefined ? 0 : props.filters[props.filterIndex].brushLocation[0];\n    let brushInitEnd = props.filters[props.filterIndex].brushLocation == undefined ? 196 : props.filters[props.filterIndex].brushLocation[1];\n\n    if(brushInitStart === 0 && brushInitEnd === 196) {\n\n    }else {\n        context.append(\"rect\")\n            .attr(\"class\", \"xBrushInit\")\n            .call(brush)\n            // .selectAll(\"rect\")\n            .attr(\"x\", brushInitStart)\n            .attr(\"y\", 0)\n            .attr(\"width\", brushInitEnd - brushInitStart)\n            .attr(\"height\", height);\n    }\n    \n\n\n    \n\n\n    function brushed() {\n        d3.select('.xBrushInit').remove();\n        if (!d3.event.selection) return;\n        if (d3.event.selection === null) d3.event.selection = [0, width];\n        var selected = null;\n        selected = x.domain()\n            .filter(function (d) {\n                return (d3.event.selection[0] <= x(d)) && (x(d) <= d3.event.selection[1]);\n            });\n        if(selected.length === 0) {\n            selected = x.domain()\n            .filter(function (d) {\n                return (d3.event.selection[0] <= x(d));\n            });\n        }\n        \n        \n        var start;\n        var end;\n\n\n        if (d3.event.selection[0] != d3.event.selection[1]) {\n            if(selected.length === 1) {\n                start = selected[0];\n                end = selected[0] + 1;\n                \n            } else {\n                start = selected[0];\n                end = selected[selected.length - 1];\n            }\n            \n        } else {\n            start = 0;\n            end = data.length;\n        }\n\n        var updatedData = data.slice(start, end);\n        // var responseDate = [];\n        // for(var i=0;i<updatedData.length;i++){\n        //     responseDate.push(updatedData[i].index*range + Math.min(...arr));\n        // }\n        var maxValue = (end  + 1)* range + Math.min(...arr);\n        var minValue = (start === 0 ? 0 : start - 1) * range + Math.min(...arr);\n        var newData = requestDataValues.filter(d => d >= minValue && d <= maxValue)\n\n\n        d3.selectAll('#' + props.id + 'minValue').remove();\n        d3.selectAll('#' + props.id + 'maxValue').remove();\n\n        let temporalTextDiv = d3.select('#' + props.id).append(\"div\").attr(\"class\", \"textpostion\");\n\n  //  d3.select('#' + props.id).append(\"div\").attr(\"class\", \"textpostion\")\n        temporalTextDiv\n            .append(\"span\")\n            .style(\"position\", \"relative\")\n            .style(\"bottom\", \"60px\")\n            .style(\"font-size\", \"9px\")\n            .style(\"float\", \"left\")\n            .text(minValue.toFixed(2))\n            .attr('id', props.id + 'minValue')\n\n        // .transfrom('');\n\n        temporalTextDiv\n            .append(\"span\")\n            .style(\"position\", \"relative\")\n            .style(\"bottom\", \"60px\")\n            .style(\"font-size\", \"9px\")\n            .style(\"float\", \"right\")\n            .text(maxValue.toFixed(2))\n            .attr('id', props.id + 'maxValue')\n\n        var filters = props.filters;\n        // d3.select('text').remove();\n\n        // d3.select('.topicDetails').append(\"text\")\n        // .text(minValue);\n        filters[props.filterIndex].value = newData;\n        filters[props.filterIndex].type = 'equal';\n\n        filters[props.filterIndex].value1 = [minValue, maxValue];\n        filters[props.filterIndex].brushLocation = [d3.event.selection[0], d3.event.selection[1]];\n\n\n        // props.updateFilters(filters);\n        props.updateFiltersChangeFlag(true); \n\n        // updateScale(updatedData, d3.event.selection)\n\n\n    }\n\n    let temporalTextDiv = d3.select('#' + props.id).append(\"div\").attr(\"class\", \"textpostion\");\n\n\n\n    let maxValue = props.filters[props.filterIndex].value1 == undefined ? Math.max(...requestDataValues) : props.filters[props.filterIndex].value1[1];\n    let minValue = props.filters[props.filterIndex].value1 == undefined ? Math.min(...requestDataValues) : props.filters[props.filterIndex].value1[0];\n\n    temporalTextDiv\n        .append(\"span\")\n        .style(\"position\", \"relative\")\n        .style(\"bottom\", \"60px\")\n        .style(\"font-size\", \"9px\")\n        .style(\"float\", \"left\")\n        .text(minValue.toFixed(2))\n        .attr('id', props.id + 'minValue')\n\n    // .transfrom('');\n\n    temporalTextDiv\n        .append(\"span\")\n        .style(\"position\", \"relative\")\n        .style(\"bottom\", \"60px\")\n        .style(\"font-size\", \"9px\")\n        .style(\"float\", \"right\")\n        .text(maxValue.toFixed(2))\n        .attr('id', props.id + 'maxValue')\n\n    function updateScale(data, selection) {\n        var tickScale = d3.scalePow().range([data.length / 10, 0]).domain([data.length, 0]).exponent(.5)\n        // console.log('UPDATEd3.event',selection);\n        var brushValue = selection[1] - selection[0];\n        if (brushValue === 0) {\n            brushValue = width;\n        }\n\n        var tickValueMultiplier = Math.ceil(Math.abs(tickScale(brushValue)));\n        var filteredTickValues = data.filter(function (d, i) { return i % tickValueMultiplier === 0 }).map(function (d) { return d.index })\n\n    }\n\n\n    return svg;\n}\nexport default draw;\n\n"],"sourceRoot":""}