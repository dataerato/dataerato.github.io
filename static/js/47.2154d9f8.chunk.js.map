{"version":3,"sources":["pages/EditPage/FactListViewNew/NumericalFilter.js"],"names":["NumericalFilter","props","draw","document","getElementById","id","console","log","requestData","info","requestDataValues","values","map","d","replace","data","Map","clear","arr","sort","a","b","parseFloat","value","range","Math","max","min","i","set","length","setname","parseInt","get","key","datum","index","push","margin","width","height","x","d3","y","domain","brush","extent","on","remove","selection","start","end","maxValue","minValue","newData","selected","filter","isNaN","slice","temporalTextDiv","append","attr","style","text","toFixed","filters","filterIndex","type","value1","brushLocation","updateFilters","updateFiltersChangeFlag","svg","context","tickScale","exponent","brushValue","tickValueMultiplier","ceil","abs","updateScale","selectAll","enter","classed","bandwidth","random","call","brushInitStart","undefined","brushInitEnd","this","field","className","title","overflow","React","Component"],"mappings":"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","file":"static/js/47.2154d9f8.chunk.js","sourcesContent":["import React from 'react';\nimport { Tooltip, Divider } from 'antd';\nimport * as d3 from 'd3';\n\nexport default class NumericalFilter extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.draw(this.props);\n    }\n    componentDidUpdate() {\n        this.draw(this.props);\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     let { filters } = this.props;\n    //     console.log(\"🚀 ~ file: NumericalFilter.js ~ line 20 ~ NumericalFilter ~ shouldComponentUpdate ~ nextProps\", nextProps)\n\n    //     console.log(\"🚀 ~ file: NumericalFilter.js ~ line 17 ~ NumericalFilter ~ shouldComponentUpdate ~ this.props\", this.props)\n\n    //     let nextfilters= nextProps.filters;// this.forceUpdate()\n    //     console.log(\"🚀 ~ file: NumericalFilter.js ~ line 22 ~ NumericalFilter ~ shouldComponentUpdate ~ !_.isEqual(filters, nextfilters) \", nextfilters )\n    //     console.log(\"🚀 ~ file: NumericalFilter.js ~ line 22 ~ NumericalFilter ~ shouldComponentUpdate ~ !_.isEqual(filters, nextfilters) \", filters )\n    //     console.log(\"🚀 ~ file: NumericalFilter.js ~ line 23 ~ NumericalFilter ~ shouldComponentUpdate ~ _.isEqual(filters, nextfilters) \", _.isEqual(filters, nextfilters) )\n    //     if(nextProps.filtersChangeFlag){\n    //         console.log(\"我在这里\")\n    //         this.draw(_.cloneDeep(this.props))\n    //     } \n    //     if(!_.isEqual(filters, nextfilters)){\n    //         if(nextProps.filtersChangeFlag){\n    //             console.log(\"我在这里\")\n    //             this.draw(_.cloneDeep(this.props))\n    //         } \n    //         else this.draw(_.cloneDeep(nextProps))\n    //     } \n    //     return !_.isEqual(filters, nextfilters)\n    // }\n  \n\n    draw = (props) => {\n        \n        if(document.getElementById(props.id + '-svg')) {\n            // d3.selectAll('#' + props.id + '-svg').remove();\n            return;\n        }\n        else console.log('不存在')\n\n        \n        var requestData = props.info;\n        var requestDataValues = props.info.values.map(d => d.replace(',', '')); //去除数据中的\",\"\" 比如\"1,385.66\"\n        var data = [];\n\n        var map = new Map();\n\n        map.clear();\n\n        var arr = requestData.values.sort(function (a, b) {\n            return parseFloat(a) - parseFloat(b);\n        });\n        arr = arr.map((value) => {\n            return parseFloat(value);\n        })\n        var range = parseFloat((Math.max(...arr) - Math.min(...arr)) / 20);\n\n\n        for (var i = 0; i < 20; i++) {\n            map.set(i, 0);\n        }\n\n        for (var i = 0; i < arr.length - 1; i++) {\n            var setname = parseInt((arr[i] - Math.min(...arr)) / range);\n            map.set(setname, map.get(setname) + 1);\n        }\n        map.set(19, map.get(19) + 1);\n\n\n        for (let [key, value] of map) {\n            var datum = {};\n            // datum.index = i;\n            datum.index = key;\n            datum.value = value;\n            data.push(datum);\n        }\n\n        var margin = { top: 0, right: 0, bottom: 0, left: 0 },\n            width = 196 - margin.left - margin.right,\n            height = 36 - margin.top - margin.bottom;\n\n\n        var x = d3.scaleBand().range([0, width]),\n            //([0, width], .1),\n            y = d3.scaleLinear().range([height, 0]);\n\n        // var xAxis2 = d3.svg.axis().scale(x).orient(\"bottom\").tickValues([]);\n        x.domain(data.map(function (d) { return d.index }));\n        y.domain([0, Math.max(...map.values())]);\n\n    \n\n        var brush = d3.brushX()\n            //  .x(x) \n            .extent([[0, 0], [width, height]])\n            .on(\"brush\", brushed);\n\n        var svg = d3.select('#' + props.id).append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .attr(\"id\", props.id + '-svg');\n\n       \n   \n\n\n        svg.append(\"rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"x\", \"0\")\n            .attr(\"y\", \"0\")\n            .attr(\"fill\", \"#f0f0f0\")\n\n\n\n\n        var context = svg.append(\"g\")\n            .attr(\"class\", \"context\")\n        //   .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        updateScale(data, [0, width]);\n\n        var subBars = context.selectAll('.subBar')\n            .data(data)\n\n        subBars.enter().append(\"rect\")\n            .classed('subBar', true)\n            .attr(\"height\", (d) => height - y(d.value))\n            .attr(\"width\", (d) => x.bandwidth())\n            .attr(\"x\", (d) => x(d.index))\n            .attr(\"y\", (d) => y(d.value))\n            .attr(\"fill\", \"#777\");\n        // .attr(\n        // {\n        // height: function (d)\n        // {\n        //     console.log('ddd', height);\n        //     console.log('ddd', y(d.value))\n        //     return height - y(d.value);\n        // },\n        // width: function(d){ return x.rangeBand()},\n        // x: function(d) {\n\n        //     return x(d.index);\n        // },\n        // y: function(d)\n        // {\n        //     return y(d.value)\n        // }\n        // })\n        context.append(\"g\")\n            .attr(\"class\", \"x brush\" + Math.random())\n            .call(brush)\n            .selectAll(\"rect\")\n            .attr(\"y\", 0)\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n\n        let brushInitStart = props.filters[props.filterIndex].brushLocation == undefined ? 0 : props.filters[props.filterIndex].brushLocation[0];\n        let brushInitEnd = props.filters[props.filterIndex].brushLocation == undefined ? 196 : props.filters[props.filterIndex].brushLocation[1];\n\n\nif(brushInitStart === 0 && brushInitEnd === 196) {\n\n        }else {\n            context.append(\"rect\")\n                .attr(\"class\", \"xBrushInit\")\n                .attr(\"id\", props.id + \"-xBrushInit\")\n                .call(brush)\n                // .selectAll(\"rect\")\n                .attr(\"x\", brushInitStart)\n                .attr(\"y\", 0)\n                .attr(\"width\", brushInitEnd - brushInitStart)\n                .attr(\"height\", height);\n        }\n        \n        function brushed() {\n          \n            d3.select('#' + props.id +'-xBrushInit').remove();\n            if (!d3.event.selection) return;\n            if (d3.event.selection === null) d3.event.selection = [0, width];\n            var selected = null;\n            selected = x.domain()\n                .filter(function (d) {\n                    return (d3.event.selection[0] <= x(d)) && (x(d) <= d3.event.selection[1]);\n                });\n            if(selected.length === 0) {\n                selected = x.domain()\n                .filter(function (d) {\n                    return (d3.event.selection[0] <= x(d));\n                });\n            }\n            \n            var start;\n            var end;\n\n            var maxValue;\n            var minValue;\n            var newData;\n\n\n            if (d3.event.selection[0] != d3.event.selection[1]) {\n                if(selected.length === 1) {\n                    start = selected[0];\n                    end = selected[0] + 1;\n                    \n                } else {\n                    start = selected[0];\n                    end = selected[selected.length - 1];\n                }\n\n                // console.log('selected', selected)\n\n                // console.log('start', start)\n                // console.log('end', end)\n\n                maxValue = (end  + 1)* range + Math.min(...arr);\n                minValue = (start === 0 ? 0 : start - 1) * range + Math.min(...arr);\n                newData = requestDataValues.filter(d => d >= minValue && d <= maxValue);\n                // console.log('minValue', minValue)\n                // console.log('maxValue', maxValue)\n                // console.log('newData', newData)\n                if(isNaN(minValue) || isNaN(maxValue)) {\n                    maxValue = '';\n                    minValue = '';\n                    newData = [];\n                }\n                \n            } else {\n                start = 0;\n                end = 0;\n                maxValue = '';\n                minValue = '';\n                newData = [];\n            }\n            var updatedData = data.slice(start, end);\n           \n\n            d3.selectAll('#' + props.id + '-textpostion').remove();\n\n            let temporalTextDiv = d3.select('#' + props.id).append(\"div\").attr(\"id\", props.id + '-textpostion');\n\n    //  d3.select('#' + props.id).append(\"div\").attr(\"class\", \"textpostion\")\n            temporalTextDiv\n                .append(\"span\")\n                .style(\"position\", \"relative\")\n                .style(\"bottom\", \"60px\")\n                .style(\"font-size\", \"9px\")\n                .style(\"float\", \"left\")\n                .text(minValue === '' ? minValue : minValue.toFixed(2))\n                .attr('id', props.id + 'minValue')\n\n            // .transfrom('');\n\n            temporalTextDiv\n                .append(\"span\")\n                .style(\"position\", \"relative\")\n                .style(\"bottom\", \"60px\")\n                .style(\"font-size\", \"9px\")\n                .style(\"float\", \"right\")\n                .text(maxValue === '' ? maxValue : maxValue.toFixed(2))\n                .attr('id', props.id + 'maxValue')\n\n            var filters = props.filters;\n            // console.log('filters-brush-0', filters)\n            // d3.select('text').remove();\n\n            // d3.select('.topicDetails').append(\"text\")\n            // .text(minValue);\n            props.filters[props.filterIndex].value = newData;\n            props.filters[props.filterIndex].type = 'equal';\n\n            props.filters[props.filterIndex].value1 = [minValue, maxValue];\n            props.filters[props.filterIndex].brushLocation = [d3.event.selection[0], d3.event.selection[1]];\n\n            console.log('filters-brush-1', props.filters)\n            props.updateFilters(filters);\n            props.updateFiltersChangeFlag(true); \n\n            // updateScale(updatedData, d3.event.selection)\n\n\n        }\n\n        d3.selectAll('#' + props.id + '-textpostion').remove();\n        let temporalTextDiv = d3.select('#' + props.id).append(\"div\").attr(\"id\", props.id + '-textpostion');\n\n       \n\n        let maxValue = props.filters[props.filterIndex].value1 == undefined ? Math.max(...requestDataValues) : props.filters[props.filterIndex].value1[1];\n        let minValue = props.filters[props.filterIndex].value1 == undefined ? Math.min(...requestDataValues) : props.filters[props.filterIndex].value1[0];\n\n        temporalTextDiv\n            .append(\"span\")\n            .style(\"position\", \"relative\")\n            .style(\"bottom\", \"60px\")\n            .style(\"font-size\", \"9px\")\n            .style(\"float\", \"left\")\n            .text(minValue.toFixed(2))\n            .attr('id', props.id + 'minValue')\n\n        // .transfrom('');\n\n        temporalTextDiv\n            .append(\"span\")\n            .style(\"position\", \"relative\")\n            .style(\"bottom\", \"60px\")\n            .style(\"font-size\", \"9px\")\n            .style(\"float\", \"right\")\n            .text(maxValue.toFixed(2))\n            .attr('id', props.id + 'maxValue')\n\n        function updateScale(data, selection) {\n            var tickScale = d3.scalePow().range([data.length / 10, 0]).domain([data.length, 0]).exponent(.5)\n            // console.log('UPDATEd3.event',selection);\n            var brushValue = selection[1] - selection[0];\n            if (brushValue === 0) {\n                brushValue = width;\n            }\n\n            var tickValueMultiplier = Math.ceil(Math.abs(tickScale(brushValue)));\n            var filteredTickValues = data.filter(function (d, i) { return i % tickValueMultiplier === 0 }).map(function (d) { return d.index })\n\n        }\n\n\n        // return svg;\n    }\n\n    render() {\n        let values = this.props.info.values;\n        let field = this.props.info.field;\n        return (\n            <div className=\"NumericalFilter\">\n                <div className=\"topicContent\">\n                    <Tooltip title={field}>\n                        <p className=\"fieldText\">{field}</p>\n                    </Tooltip>\n                </div>\n\n                <div className=\"topicDetails topicDetailsSales\" id={this.props.id} style={{ height: '60px', overflow: 'hidden' }}>\n                    \n                </div>\n                <Divider />\n            </div>\n        )\n    }\n   \n}\n\n"],"sourceRoot":""}